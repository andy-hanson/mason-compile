{"version":3,"sources":["private/parse/Slice.js"],"names":[],"mappings":"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","file":"private/parse/Slice.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Loc', 'op/Op', '../token/Keyword', '../util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Loc_1 = require('esast/lib/Loc');\n    var Op_1 = require('op/Op');\n    var Keyword_1 = require('../token/Keyword');\n    var util_1 = require('../util');\n    class Slice {\n        constructor(tokens, start, end, loc) {\n            this.tokens = tokens;\n            this.start = start;\n            this.end = end;\n            this.loc = loc;\n        }\n        static of(group) {\n            return new this(group.subTokens, 0, group.subTokens.length, group.loc);\n        }\n        size() {\n            return this.end - this.start;\n        }\n        isEmpty() {\n            return this.start === this.end;\n        }\n        head() {\n            return this.tokens[this.start];\n        }\n        second() {\n            return this.tokens[this.start + 1];\n        }\n        last() {\n            return this.tokens[this.end - 1];\n        }\n        nextToLast() {\n            return this.tokens[this.end - 2];\n        }\n        tail() {\n            return this.chopStart(this.start + 1);\n        }\n        rtail() {\n            return this.chopEnd(this.end - 1);\n        }\n        opSplitOnce(splitOn) {\n            for (let i = this.start; i < this.end; i = i + 1) {\n                const token = this.tokens[i];\n                if (splitOn(token))\n                    return {\n                        before: this.chopEnd(i),\n                        at: token,\n                        after: this.chopStart(i + 1)\n                    };\n            }\n            return null;\n        }\n        opSplitMany(splitOn) {\n            let iLast = this.start;\n            const out = [];\n            for (let i = this.start; i < this.end; i = i + 1) {\n                const token = this.tokens[i];\n                if (splitOn(token)) {\n                    out.push({ before: this.chop(iLast, i), at: token });\n                    iLast = i + 1;\n                }\n            }\n            return Op_1.opIf(!util_1.isEmpty(out), () => {\n                out.push({ before: this.chopStart(iLast), at: null });\n                return out;\n            });\n        }\n        *[Symbol.iterator]() {\n            for (let i = this.start; i < this.end; i = i + 1)\n                yield this.tokens[i];\n        }\n        map(mapper) {\n            const out = [];\n            for (const _ of this)\n                out.push(mapper(_));\n            return out;\n        }\n        slice(newStart, newEnd, newLoc) {\n            return new this.constructor(this.tokens, newStart, newEnd, newLoc);\n        }\n        chop(newStart, newEnd) {\n            return this.slice(newStart, newEnd, new Loc_1.default(this.tokens[newStart].loc.start, this.tokens[newEnd - 1].loc.end));\n        }\n        chopStart(newStart) {\n            return this.slice(newStart, this.end, newStart === this.end ? this.loc : new Loc_1.default(this.tokens[newStart].loc.start, this.loc.end));\n        }\n        chopEnd(newEnd) {\n            return this.slice(this.start, newEnd, newEnd === this.start ? this.loc : new Loc_1.default(this.loc.start, this.tokens[newEnd - 1].loc.end));\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = Slice;\n    class Lines extends Slice {\n        static of(group) {\n            return super.of(group);\n        }\n        *slices() {\n            for (const _ of this)\n                yield Tokens.of(_);\n        }\n        headSlice() {\n            return Tokens.of(this.head());\n        }\n        lastSlice() {\n            return Tokens.of(this.last());\n        }\n        mapSlices(mapper) {\n            const out = [];\n            for (const _ of this.slices())\n                out.push(mapper(_));\n            return out;\n        }\n    }\n    exports.Lines = Lines;\n    class Tokens extends Slice {\n        static of(group) {\n            return super.of(group);\n        }\n        getKeywordSections(keywords) {\n            const out = new Array(keywords.length + 1).fill(null);\n            let iNextKeyword = 0;\n            let iTokenPrev = this.start;\n            for (let iToken = this.start; iToken < this.end; iToken = iToken + 1) {\n                const token = this.tokens[iToken];\n                if (token instanceof Keyword_1.default) {\n                    const kind = token.kind;\n                    for (let iKeyword = iNextKeyword; iKeyword < keywords.length; iKeyword = iKeyword + 1)\n                        if (kind === keywords[iKeyword]) {\n                            out[iNextKeyword] = this.chop(iTokenPrev, iToken);\n                            iNextKeyword = iKeyword + 1;\n                            iTokenPrev = iToken + 1;\n                        }\n                }\n            }\n            out[iNextKeyword] = this.chopStart(iTokenPrev);\n            return [Op_1.orThrow(util_1.head(out)), util_1.tail(out)];\n        }\n        takeKeywords(...keywords) {\n            const out = new Array(keywords.length).fill(false);\n            let iNextKeyword = 0;\n            let iTokenPrev = this.start;\n            for (let iToken = this.start; iToken < this.end; iToken = iToken + 1) {\n                const token = this.tokens[iToken];\n                if (token instanceof Keyword_1.default) {\n                    const kind = token.kind;\n                    for (let iKeyword = iNextKeyword; iKeyword < keywords.length; iKeyword = iKeyword + 1)\n                        if (kind === keywords[iKeyword]) {\n                            out[iNextKeyword] = true;\n                            iNextKeyword = iNextKeyword + 1;\n                            iTokenPrev = iToken + 1;\n                        }\n                }\n            }\n            return [out, this.chopStart(iTokenPrev)];\n        }\n    }\n    exports.Tokens = Tokens;\n});\n"],"sourceRoot":"/source/"}