{"version":3,"sources":["private/verify/verifyBlock.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,eAAe,CAAC,EAAE,OAAO,CAAC,CAAC;KAC9J;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5B,QAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtC,QAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,QAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAChC,QAAI,eAAe,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACjD,QAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACrC,QAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,QAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,QAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,aAAS,WAAW,CAAC,EAAE,EAAE;AACrB,cAAM,CAAC,GAAG,IAAI,CAAC;cACP,KAAK,GAAU,CAAC,CAAhB,KAAK;cAAE,GAAG,GAAK,CAAC,CAAT,GAAG;;AAClB,YAAI,EAAE,KAAK,CAAC,EACR,aAAa,CAAC,CAAC,CAAC,CAAC,KAChB;AACD,qBAAS,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,iBAAiB,CAAC,CAAC;AACvE,kBAAM,IAAI,GAAG,eAAe,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACjD,oBAAQ,IAAI;AACR,qBAAK,CAAC,CAAC;AACP,qBAAK,CAAC,CAAC;AACP,qBAAK,CAAC;AACF,oCAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAC7B,0BAAM;AAAA,AACV,qBAAK,CAAC;AACF,iCAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7B,0BAAM;AAAA,AACV,qBAAK,CAAC;AACF,4BAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM;AAClE,8BAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBAChC,CAAC,CAAC;AACH,0BAAM;AAAA,AACV;AACI,0BAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA,aACrC;AACD,qBAAS,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAC9C;KACJ;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,WAAW,CAAC;AAC9B,aAAS,aAAa,CAAC,CAAC,EAAE;AACtB,iBAAS,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,eAAO,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;KACzC;AACD,WAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACtC,aAAS,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE;AACnC,iBAAS,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,SAAS,IAAI;AAClG,gBAAI,SAAS,KAAK,CAAC,EAAE;AACjB,qBAAK,MAAM,IAAI,IAAI,KAAK,EACpB,IAAI,IAAI,YAAY,OAAO,CAAC,QAAQ,EAChC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACpD,6BAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7B,uBAAO,CAAC,CAAC;aACZ,MACI;AACD,gCAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAC7B,uBAAO,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClC;SACJ,EAAE,MAAM;AACL,gBAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EACrB,OAAO,CAAC,CAAC,KACR;AACD,sBAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,sBAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,oBAAI,MAAM,KAAK,CAAC,EAAE;AACd,iCAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7B,2BAAO,CAAC,CAAC;iBACZ,MACI;AACD,0BAAM,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7D,4BAAQ,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM;AACjC,yBAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;qBACpB,CAAC,CAAC;AACH,2BAAO,CAAC,CAAC;iBACZ;aACJ;SACJ,CAAC,CAAC;KACN;AACD,WAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC9C,aAAS,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE;AAClC,gBAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM;AAC/D,yBAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAChC,CAAC,CAAC;KACN;CACJ,CAAC,CAAC","file":"private/verify/verifyBlock.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../context', '../MsAst', '../util', './autoBlockKind', './context', './locals', './SK', './verifyLines'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var context_1 = require('../context');\n    var MsAst_1 = require('../MsAst');\n    var util_1 = require('../util');\n    var autoBlockKind_1 = require('./autoBlockKind');\n    var context_2 = require('./context');\n    var locals_1 = require('./locals');\n    var SK_1 = require('./SK');\n    var verifyLines_1 = require('./verifyLines');\n    function verifyBlock(sk) {\n        const _ = this;\n        const { lines, loc } = _;\n        if (sk === 0)\n            verifyDoBlock(_);\n        else {\n            context_1.check(!util_1.isEmpty(lines), loc, _ => _.blockNeedsContent);\n            const kind = autoBlockKind_1.default(lines, loc);\n            switch (kind) {\n                case 3:\n                case 4:\n                case 5:\n                    verifyBuiltLines(lines, loc);\n                    break;\n                case 1:\n                    verifyLines_1.default(lines);\n                    break;\n                case 2:\n                    locals_1.plusLocals(verifyLines_1.default(util_1.rtail(lines)), () => {\n                        util_1.last(lines).verify(1);\n                    });\n                    break;\n                default:\n                    throw new Error(String(kind));\n            }\n            context_2.results.blockToKind.set(_, kind);\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = verifyBlock;\n    function verifyDoBlock(_) {\n        context_2.results.blockToKind.set(_, 0);\n        return verifyLines_1.default(_.lines);\n    }\n    exports.verifyDoBlock = verifyDoBlock;\n    function verifyModuleLines(lines, loc) {\n        context_2.results.moduleKind = Op_1.caseOp(autoBlockKind_1.opBlockBuildKind(lines, loc), buildKind => {\n            if (buildKind === 5) {\n                for (const line of lines)\n                    if (line instanceof MsAst_1.ObjEntry)\n                        context_2.results.objEntryExports.add(line);\n                verifyLines_1.default(lines);\n                return 2;\n            }\n            else {\n                verifyBuiltLines(lines, loc);\n                return buildKind === 3 ? 3 : 4;\n            }\n        }, () => {\n            if (util_1.isEmpty(lines))\n                return 0;\n            else {\n                const l = util_1.last(lines);\n                const lastSK = SK_1.getSK(l);\n                if (lastSK === 0) {\n                    verifyLines_1.default(lines);\n                    return 0;\n                }\n                else {\n                    const newLocals = verifyLines_1.default(util_1.rtail(lines));\n                    locals_1.plusLocals(newLocals, () => {\n                        l.verify(lastSK);\n                    });\n                    return 1;\n                }\n            }\n        });\n    }\n    exports.verifyModuleLines = verifyModuleLines;\n    function verifyBuiltLines(lines, loc) {\n        locals_1.verifyAndPlusLocal(MsAst_1.LocalDeclare.built(loc), () => {\n            verifyLines_1.default(lines);\n        });\n    }\n});\n"],"sourceRoot":"/source/"}