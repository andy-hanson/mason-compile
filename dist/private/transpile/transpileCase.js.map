{"version":3,"sources":["private/transpile/transpileCase.js"],"names":[],"mappings":"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","file":"private/transpile/transpileCase.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/ast', 'op/Op', '../MsAst', './ast-constants', './context', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var ast_1 = require('esast/lib/ast');\n    var Op_1 = require('op/Op');\n    var MsAst_1 = require('../MsAst');\n    var ast_constants_1 = require('./ast-constants');\n    var context_1 = require('./context');\n    var util_1 = require('./util');\n    function default_1() {\n        const body = caseBody(this.parts, this.opElse);\n        if (context_1.verifyResults.isStatement(this))\n            return Op_1.caseOp(this.opCased, _ => new ast_1.BlockStatement([util_1.t0(_), body]), () => body);\n        else {\n            const block = Op_1.caseOp(this.opCased, _ => [util_1.t0(_), body], () => [body]);\n            return util_1.blockWrap(new ast_1.BlockStatement(block));\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = default_1;\n    function transpileCasePart(alternate) {\n        if (this.test instanceof MsAst_1.Pattern) {\n            const { type, patterned, locals } = this.test;\n            const decl = util_1.plainLet(IdExtract, util_1.msCall('extract', util_1.t0(type), util_1.t0(patterned), new ast_1.LiteralNumber(locals.length)));\n            const test = new ast_1.BinaryExpression('!==', IdExtract, ast_constants_1.LitNull);\n            const extract = new ast_1.VariableDeclaration('let', locals.map((_, index) => new ast_1.VariableDeclarator(util_1.idForDeclareCached(_), new ast_1.MemberExpressionComputed(IdExtract, new ast_1.LiteralNumber(index)))));\n            const res = util_1.t1(this.result, extract);\n            return new ast_1.BlockStatement([decl, new ast_1.IfStatement(test, res, alternate)]);\n        }\n        else\n            return new ast_1.IfStatement(util_1.t0(this.test), util_1.t0(this.result), alternate);\n    }\n    exports.transpileCasePart = transpileCasePart;\n    function caseBody(parts, opElse) {\n        let acc = Op_1.caseOp(opElse, util_1.t0, () => ThrowNoCaseMatch);\n        for (let i = parts.length - 1; i >= 0; i = i - 1)\n            acc = util_1.t1(parts[i], acc);\n        return acc;\n    }\n    const IdExtract = new ast_1.Identifier('_$');\n    const ThrowNoCaseMatch = util_1.throwErrorFromString('No branch of `case` matches.');\n});\n"],"sourceRoot":"/source/"}