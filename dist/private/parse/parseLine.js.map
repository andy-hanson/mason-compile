{"version":3,"sources":["private/parse/parseLine.js"],"names":[],"mappings":"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","file":"private/parse/parseLine.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../context', '../MsAst', '../Token', '../util', './checks', './parseBlock', './parseExpr', './parseLocalDeclares', './parseMemberName', './parseName', './parseQuote', './parseSpaced', './parseTraitDo', './Slice'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var context_1 = require('../context');\n    var MsAst_1 = require('../MsAst');\n    var Token_1 = require('../Token');\n    var util_1 = require('../util');\n    var checks_1 = require('./checks');\n    var parseBlock_1 = require('./parseBlock');\n    var parseExpr_1 = require('./parseExpr');\n    var parseLocalDeclares_1 = require('./parseLocalDeclares');\n    var parseMemberName_1 = require('./parseMemberName');\n    var parseName_1 = require('./parseName');\n    var parseQuote_1 = require('./parseQuote');\n    var parseSpaced_1 = require('./parseSpaced');\n    var parseTraitDo_1 = require('./parseTraitDo');\n    var Slice_1 = require('./Slice');\n    function parseLine(tokens) {\n        const loc = tokens.loc;\n        const head = tokens.head();\n        const rest = () => tokens.tail();\n        const noRest = () => {\n            checks_1.checkEmpty(rest(), _ => _.unexpectedAfter(head));\n        };\n        if (head instanceof Token_1.Keyword)\n            switch (head.kind) {\n                case 38:\n                case 64:\n                    return parseAssert(head.kind === 64, rest());\n                case 41:\n                    return new MsAst_1.Break(loc, parseExpr_1.opParseExpr(rest()));\n                case 49:\n                    noRest();\n                    return new MsAst_1.SpecialDo(loc, 0);\n                case 54:\n                    return new MsAst_1.BagEntry(loc, parseExpr_1.default(rest()), true);\n                case 79:\n                    return new MsAst_1.Ignore(loc, rest().map(parseLocalDeclares_1.parseLocalName));\n                case 92:\n                    return new MsAst_1.BagEntry(loc, parseExpr_1.default(rest()));\n                case 95:\n                    return Op_1.caseOp(parseExpr_1.opParseExpr(rest()), _ => new MsAst_1.Pass(tokens.loc, _), () => []);\n                case 97:\n                    return parseLines(parseBlock_1.justBlock(97, rest()));\n                case 103:\n                    return new MsAst_1.Throw(loc, parseExpr_1.opParseExpr(rest()));\n                case 106:\n                    return parseTraitDo_1.default(rest());\n                default:\n            }\n        return Op_1.caseOp(tokens.opSplitOnce(_ => Token_1.isAnyKeyword(lineSplitKeywords, _)), ({ before, at: atToken, after }) => {\n            const at = atToken;\n            switch (at.kind) {\n                case 85:\n                    return new MsAst_1.MapEntry(loc, parseExpr_1.default(before), parseExpr_1.default(after));\n                case 92:\n                    return parseObjEntry(before, after, loc);\n                default:\n                    return parseAssignLike(before, at, parseExpr_1.default(after), loc);\n            }\n        }, () => parseExpr_1.default(tokens));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseLine;\n    const lineSplitKeywords = new Set([39, 84, 85, 92]);\n    function parseLines(lines) {\n        const lineContents = [];\n        for (const line of lines.slices()) {\n            const _ = parseLine(line);\n            if (_ instanceof Array)\n                lineContents.push(..._);\n            else\n                lineContents.push(_);\n        }\n        return lineContents;\n    }\n    exports.parseLines = parseLines;\n    function parseAssignLike(before, at, value, loc) {\n        const kind = at.kind;\n        if (before.size() === 1) {\n            const token = before.head();\n            if (token instanceof Token_1.GroupSpace) {\n                const spaced = Slice_1.Tokens.of(token);\n                const [assignee, opType] = Op_1.caseOp(spaced.opSplitOnce(_ => Token_1.isKeyword(47, _)), ({ before, after }) => [before, parseExpr_1.default(after)], () => [spaced, null]);\n                const last = assignee.last();\n                const object = (obj) => obj.isEmpty() ? MsAst_1.LocalAccess.this(obj.loc) : parseSpaced_1.default(obj);\n                if (Token_1.isKeyword(52, assignee.nextToLast())) {\n                    const name = parseMemberName_1.default(last);\n                    const set = object(assignee.rtail().rtail());\n                    return new MsAst_1.MemberSet(loc, set, name, opType, setKind(at), value);\n                }\n                else if (last instanceof Token_1.GroupBracket) {\n                    const set = object(assignee.rtail());\n                    const subbeds = parseExpr_1.parseExprParts(Slice_1.Tokens.of(last));\n                    return new MsAst_1.SetSub(loc, set, subbeds, opType, setKind(at), value);\n                }\n            }\n        }\n        if (kind === 84)\n            return parseLocalMutate(before, value, loc);\n        else {\n            util_1.assert(kind === 39);\n            return parseAssign(before, value, loc);\n        }\n    }\n    function parseObjEntry(before, after, loc) {\n        if (before.size() === 1) {\n            const token = before.head();\n            const isName = Token_1.isKeyword(88, token);\n            const value = () => parseExpr_1.default(after);\n            if (after.isEmpty())\n                return isName ?\n                    MsAst_1.ObjEntryPlain.nameEntry(loc, new MsAst_1.SpecialVal(loc, 1)) :\n                    MsAst_1.ObjEntryPlain.access(loc, parseLocalDeclares_1.parseLocalName(token));\n            else if (token instanceof Token_1.Keyword)\n                return new MsAst_1.ObjEntryPlain(loc, Token_1.keywordName(token.kind), value());\n            else if (token instanceof Token_1.GroupQuote)\n                return new MsAst_1.ObjEntryPlain(loc, parseQuote_1.default(Slice_1.default.of(token)), value());\n            else if (token instanceof Token_1.GroupSpace) {\n                const slice = Slice_1.Tokens.of(token);\n                if (slice.size() === 2 && Token_1.isKeyword(102, slice.head())) {\n                    const name = new MsAst_1.QuoteSimple(loc, parseName_1.default(slice.second()));\n                    return new MsAst_1.ObjEntryPlain(loc, name, value());\n                }\n            }\n        }\n        const assign = parseAssign(before, parseExpr_1.default(after), loc);\n        return new MsAst_1.ObjEntryAssign(loc, assign);\n    }\n    function setKind(keyword) {\n        switch (keyword.kind) {\n            case 39:\n                return 0;\n            case 84:\n                return 1;\n            default:\n                throw checks_1.unexpected(keyword);\n        }\n    }\n    function parseLocalMutate(localsTokens, value, loc) {\n        const locals = parseLocalDeclares_1.parseLocalDeclaresJustNames(localsTokens);\n        context_1.check(locals.length === 1, loc, _ => _.todoMutateDestructure);\n        return new MsAst_1.LocalMutate(loc, locals[0].name, value);\n    }\n    function parseAssign(localsTokens, value, loc) {\n        const locals = parseLocalDeclares_1.default(localsTokens);\n        if (locals.length === 1)\n            return new MsAst_1.AssignSingle(loc, locals[0], value);\n        else {\n            context_1.check(locals.length > 1, localsTokens.loc, _ => _.assignNothing);\n            const kind = locals[0].kind;\n            for (const _ of locals)\n                context_1.check(_.kind === kind, _.loc, _ => _.destructureAllLazy);\n            return new MsAst_1.AssignDestructure(loc, locals, value);\n        }\n    }\n    function parseAssert(negate, tokens) {\n        checks_1.checkNonEmpty(tokens, _ => _.expectedAfterAssert);\n        const [condTokens, opThrown] = Op_1.caseOp(tokens.opSplitOnce(_ => Token_1.isKeyword(103, _)), ({ before, after }) => [before, parseExpr_1.default(after)], () => [tokens, null]);\n        const parts = parseExpr_1.parseExprParts(condTokens);\n        const cond = parts.length === 1 ? parts[0] : new MsAst_1.Call(condTokens.loc, parts[0], util_1.tail(parts));\n        return new MsAst_1.Assert(tokens.loc, negate, cond, opThrown);\n    }\n});\n"],"sourceRoot":"/source/"}