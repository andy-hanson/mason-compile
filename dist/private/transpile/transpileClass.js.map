{"version":3,"sources":["private/transpile/transpileClass.js"],"names":[],"mappings":"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","file":"private/transpile/transpileClass.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/ast', 'esast-create-util/lib/util', 'op/Op', '../util', './ast-constants', './context', './transpileMethod', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var ast_1 = require('esast/lib/ast');\n    var util_1 = require('esast-create-util/lib/util');\n    var Op_1 = require('op/Op');\n    var util_2 = require('../util');\n    var ast_constants_1 = require('./ast-constants');\n    var context_1 = require('./context');\n    var transpileMethod_1 = require('./transpileMethod');\n    var util_3 = require('./util');\n    function transpileClass() {\n        const opName = Op_1.opMap(context_1.verifyResults.opName(this), util_1.identifier);\n        const methods = util_2.cat(this.statics.map((_) => transpileMethod_1.transpileMethodToDefinition(_, true)), Op_1.caseOp(this.opConstructor, util_3.t0, () => Op_1.opMap(this.opFields, (_) => defaultConstructor(_, this.opSuperClass !== null))), this.methods.map((_) => transpileMethod_1.transpileMethodToDefinition(_, false)));\n        const classExpr = new ast_1.ClassExpression(opName, Op_1.opMap(this.opSuperClass, util_3.t0), new ast_1.ClassBody(methods));\n        if (this.opDo === null && !this.isRecord && util_2.isEmpty(this.traits))\n            return classExpr;\n        else {\n            const lead = util_2.cat(util_3.plainLet(ast_constants_1.IdFocus, classExpr), Op_1.opMap(this.opFields, beRecord), this.traits.map((_) => util_3.msCall('traitDo', ast_constants_1.IdFocus, util_3.t0(_))));\n            const block = Op_1.caseOp(this.opDo, _ => util_3.t3(_.block, lead, null, ast_constants_1.ReturnFocus), () => new ast_1.BlockStatement(util_2.cat(lead, ast_constants_1.ReturnFocus)));\n            return util_3.blockWrap(block);\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = transpileClass;\n    function transpileConstructor() {\n        return new ast_1.MethodDefinitionConstructor(context_1.verifyResults.constructorHasSuper(this) ?\n            util_3.t2(this.fun, ast_constants_1.LetLexicalThis, true) :\n            util_3.t1(this.fun, constructorSetMembers(this)));\n    }\n    exports.transpileConstructor = transpileConstructor;\n    function constructorSetMembers(constructor) {\n        return constructor.memberArgs.map(_ => util_3.msCall('newProperty', ast_constants_1.This, new ast_1.LiteralString(_.name), util_3.idForDeclareCached(_)));\n    }\n    exports.constructorSetMembers = constructorSetMembers;\n    function beRecord(fields) {\n        const fieldNames = new ast_1.ArrayExpression(fields.map(_ => new ast_1.LiteralString(_.name)));\n        return util_3.msCall('beRecord', ast_constants_1.IdFocus, fieldNames);\n    }\n    function defaultConstructor(fields, classHasSuper) {\n        const args = fields.map(_ => util_1.identifier(_.name));\n        const opSuper = Op_1.opIf(classHasSuper, () => new ast_1.ExpressionStatement(new ast_1.CallExpression(ast_constants_1.IdSuper, [])));\n        const fieldSetters = fields.map((_, i) => new ast_1.ExpressionStatement(new ast_1.AssignmentExpression('=', util_1.member(ast_constants_1.This, _.name), util_3.maybeWrapInCheckInstance(args[i], _.opType, _.name))));\n        const body = new ast_1.BlockStatement(util_2.cat(opSuper, fieldSetters, FreezeThis));\n        return new ast_1.MethodDefinitionConstructor(new ast_1.FunctionExpression(null, args, body));\n    }\n    const FreezeThis = new ast_1.ExpressionStatement(new ast_1.CallExpression(new ast_1.MemberExpressionPlain(new ast_1.Identifier('Object'), new ast_1.Identifier('freeze')), [ast_constants_1.This]));\n});\n"],"sourceRoot":"/source/"}