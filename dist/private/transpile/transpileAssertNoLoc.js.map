{"version":3,"sources":["private/transpile/transpileAssertNoLoc.js"],"names":[],"mappings":"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","file":"private/transpile/transpileAssertNoLoc.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Expression', 'esast/lib/Statement', 'op/Op', '../ast/Call', '../ast/Val', './transpileMisc', './transpileVal', './util', './util2'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Expression_1 = require('esast/lib/Expression');\n    var Statement_1 = require('esast/lib/Statement');\n    var Op_1 = require('op/Op');\n    var Call_1 = require('../ast/Call');\n    var Val_1 = require('../ast/Val');\n    var transpileMisc_1 = require('./transpileMisc');\n    var transpileVal_1 = require('./transpileVal');\n    var util_1 = require('./util');\n    var util2_1 = require('./util2');\n    function transpileAssertNoLoc({ negate, condition, opThrown }) {\n        const failCond = () => {\n            const cond = transpileVal_1.default(condition);\n            return negate ? cond : new Expression_1.UnaryExpression('!', cond);\n        };\n        return Op_1.caseOp(opThrown, _ => new Statement_1.IfStatement(failCond(), util_1.doThrow(_)), () => {\n            if (condition instanceof Call_1.default) {\n                const { called, args } = condition;\n                const argAsts = args.map(transpileVal_1.default);\n                return new Statement_1.ExpressionStatement(called instanceof Val_1.Member ?\n                    util_1.msCall(negate ? 'assertNotMember' : 'assertMember', transpileVal_1.default(called.object), transpileMisc_1.transpileMemberName(called.name), ...argAsts) :\n                    util_1.msCall(negate ? 'assertNot' : 'assert', transpileVal_1.default(called), ...argAsts));\n            }\n            else\n                return new Statement_1.IfStatement(failCond(), ThrowAssertFail);\n        });\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = transpileAssertNoLoc;\n    const ThrowAssertFail = util2_1.throwErrorFromString('Assertion failed.');\n});\n"],"sourceRoot":"/source/"}