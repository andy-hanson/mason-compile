{"version":3,"sources":["private/parse/parseFor.js"],"names":[],"mappings":"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","file":"private/parse/parseFor.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../context', '../MsAst', '../Token', './parseBlock', './parseExpr', './parseLocalDeclares'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var context_1 = require('../context');\n    var MsAst_1 = require('../MsAst');\n    var Token_1 = require('../Token');\n    var parseBlock_1 = require('./parseBlock');\n    var parseExpr_1 = require('./parseExpr');\n    var parseLocalDeclares_1 = require('./parseLocalDeclares');\n    function parseFor(tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        return new MsAst_1.For(tokens.loc, opParseIteratee(before), parseBlock_1.default(block));\n    }\n    exports.parseFor = parseFor;\n    function parseForAsync(tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        return new MsAst_1.ForAsync(tokens.loc, parseIteratee(before), parseBlock_1.default(block));\n    }\n    exports.parseForAsync = parseForAsync;\n    function parseForBag(tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        return new MsAst_1.ForBag(tokens.loc, opParseIteratee(before), parseBlock_1.default(block));\n    }\n    exports.parseForBag = parseForBag;\n    function opParseIteratee(tokens) {\n        return Op_1.opIf(!tokens.isEmpty(), () => parseIteratee(tokens));\n    }\n    function parseIteratee(tokens) {\n        const [element, bag] = Op_1.caseOp(tokens.opSplitOnce(_ => Token_1.isKeyword(93, _)), ({ before, after }) => {\n            context_1.check(before.size() === 1, before.loc, _ => _.todoForPattern);\n            return [parseLocalDeclares_1.parseLocalDeclaresJustNames(before)[0], parseExpr_1.default(after)];\n        }, () => [MsAst_1.LocalDeclare.focus(tokens.loc), parseExpr_1.default(tokens)]);\n        return new MsAst_1.Iteratee(tokens.loc, element, bag);\n    }\n});\n"],"sourceRoot":"/source/"}