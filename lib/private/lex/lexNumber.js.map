{"version":3,"sources":["private/lex/lexNumber.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,eAAvB,EAAwC,gBAAxC,EAA0D,SAA1D,EAAqE,gBAArE,EAAuF,iBAAvF,CAAP,EAAkH,OAAlH,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,UAAM,QAAQ,QAAQ,eAAR,CAAR,CAFqB;AAG3B,UAAM,UAAU,QAAQ,gBAAR,CAAV,CAHqB;AAI3B,UAAM,UAAU,QAAQ,SAAR,CAAV,CAJqB;AAK3B,UAAM,iBAAiB,QAAQ,gBAAR,CAAjB,CALqB;AAM3B,UAAM,kBAAkB,QAAQ,iBAAR,CAAlB,CANqB;AAO3B,aAAS,SAAT,CAAmB,QAAnB,EAA6B;AACzB,cAAM,aAAa,gBAAgB,KAAhB,GAAwB,CAAxB,CADM;AAEzB,YAAI,gBAAgB,IAAhB,CAAqB,CAAC,CAAD,CAArB,KAA6B,EAA7B,EAAiC;AACjC,kBAAM,IAAI,gBAAgB,IAAhB,EAAJ,CAD2B;AAEjC,oBAAQ,CAAR;AACI,qBAAK,EAAL,CADJ;AAEI,qBAAK,GAAL,CAFJ;AAGI,qBAAK,GAAL;AAAU;AACN,wCAAgB,IAAhB,GADM;AAEN,8BAAM,iBAAiB,MAAM,EAAN,GACnB,QAAQ,aAAR,GACA,MAAM,GAAN,GACI,QAAQ,YAAR,GACA,QAAQ,UAAR,CANF;AAON,wCAAgB,SAAhB,CAA0B,cAA1B,EAPM;AAQN,8BARM;qBAAV;AAHJ,qBAaS,EAAL;AACI,4CADJ;AAEI,0BAFJ;AAbJ;AAiBQ,uCADJ;AAhBJ,aAFiC;SAArC,MAuBI,mBAvBJ;AAwBA,cAAM,MAAM,gBAAgB,YAAhB,CAA6B,KAA7B,CAAmC,UAAnC,EAA+C,gBAAgB,KAAhB,CAArD,CA1BmB;AA2BzB,cAAM,MAAM,IAAI,MAAM,OAAN,CAAc,QAAlB,EAA4B,gBAAgB,GAAhB,EAA5B,CAAN,CA3BmB;AA4BzB,uBAAe,iBAAf,CAAiC,IAAI,QAAQ,WAAR,CAAoB,GAAxB,EAA6B,GAA7B,CAAjC,EA5ByB;KAA7B;AA8BA,WAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C,EArC2B;AAsC3B,YAAQ,OAAR,GAAkB,SAAlB,CAtC2B;AAuC3B,aAAS,qBAAT,GAAiC;AAC7B,YAAI,QAAQ,cAAR,CAAuB,gBAAgB,IAAhB,CAAqB,CAArB,CAAvB,CAAJ,EAAqD;AACjD,4BAAgB,IAAhB,GADiD;AAEjD,4BAAgB,SAAhB,CAA0B,QAAQ,cAAR,CAA1B,CAFiD;SAArD;KADJ;AAMA,aAAS,gBAAT,GAA4B;AACxB,wBAAgB,SAAhB,CAA0B,QAAQ,cAAR,CAA1B,CADwB;AAExB,YAAI,gBAAgB,IAAhB,OAA2B,EAA3B,EACA,wBADJ;KAFJ;CA7CD,CAPH","file":"private/lex/lexNumber.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Loc', '../token/Token', './chars', './groupContext', './sourceContext'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Loc_1 = require('esast/lib/Loc');\n    const Token_1 = require('../token/Token');\n    const chars_1 = require('./chars');\n    const groupContext_1 = require('./groupContext');\n    const sourceContext_1 = require('./sourceContext');\n    function lexNumber(startPos) {\n        const startIndex = sourceContext_1.index - 1;\n        if (sourceContext_1.peek(-1) === 48) {\n            const p = sourceContext_1.peek();\n            switch (p) {\n                case 98:\n                case 111:\n                case 120: {\n                    sourceContext_1.skip();\n                    const isDigitSpecial = p === 98 ?\n                        chars_1.isDigitBinary :\n                        p === 111 ?\n                            chars_1.isDigitOctal :\n                            chars_1.isDigitHex;\n                    sourceContext_1.skipWhile(isDigitSpecial);\n                    break;\n                }\n                case 46:\n                    skipAfterDecimalPoint();\n                    break;\n                default:\n                    skipNormalNumber();\n            }\n        }\n        else\n            skipNormalNumber();\n        const str = sourceContext_1.sourceString.slice(startIndex, sourceContext_1.index);\n        const loc = new Loc_1.default(startPos, sourceContext_1.pos());\n        groupContext_1.addToCurrentGroup(new Token_1.NumberToken(loc, str));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = lexNumber;\n    function skipAfterDecimalPoint() {\n        if (chars_1.isDigitDecimal(sourceContext_1.peek(1))) {\n            sourceContext_1.skip();\n            sourceContext_1.skipWhile(chars_1.isDigitDecimal);\n        }\n    }\n    function skipNormalNumber() {\n        sourceContext_1.skipWhile(chars_1.isDigitDecimal);\n        if (sourceContext_1.peek() === 46)\n            skipAfterDecimalPoint();\n    }\n});\n"],"sourceRoot":"/source/"}