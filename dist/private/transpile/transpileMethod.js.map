{"version":3,"sources":["private/transpile/transpileMethod.js"],"names":[],"mappings":"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","file":"private/transpile/transpileMethod.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/ast', 'esast-create-util/lib/util', '../MsAst', './ast-constants', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var ast_1 = require('esast/lib/ast');\n    var util_1 = require('esast-create-util/lib/util');\n    var MsAst_1 = require('../MsAst');\n    var ast_constants_1 = require('./ast-constants');\n    var util_2 = require('./util');\n    function transpileMethodToDefinition(_, isStatic) {\n        const { computed, key, kind, value } = methodParams(_);\n        return new ast_1.MethodDefinitionPlain(key, value, kind, isStatic, computed);\n    }\n    exports.transpileMethodToDefinition = transpileMethodToDefinition;\n    function transpileMethodToProperty(_) {\n        const { computed, key, kind, value } = methodParams(_);\n        switch (kind) {\n            case 'method':\n                return new ast_1.PropertyMethod(key, value, computed);\n            case 'get':\n                return new ast_1.PropertyGet(key, value, computed);\n            case 'set':\n                return new ast_1.PropertySet(key, value, computed);\n            default:\n                throw new Error(String(kind));\n        }\n    }\n    exports.transpileMethodToProperty = transpileMethodToProperty;\n    function methodParams(_) {\n        const symbol = _.symbol;\n        return {\n            computed: !(typeof _.symbol === 'string'),\n            isImpl: _ instanceof MsAst_1.MethodImpl,\n            key: typeof symbol === 'string' ?\n                util_1.propertyIdOrLiteral(symbol) :\n                symbol instanceof MsAst_1.QuoteAbstract ? util_2.t0(symbol) : util_2.msCall('symbol', util_2.t0(symbol)),\n            kind: _ instanceof MsAst_1.MethodImpl ?\n                'method' :\n                _ instanceof MsAst_1.MethodGetter ? 'get' : 'set',\n            value: _ instanceof MsAst_1.MethodImpl ?\n                util_2.t0(_.fun) :\n                getSetFun(_)\n        };\n    }\n    function getSetFun(_) {\n        const args = _ instanceof MsAst_1.MethodGetter ? [] : [ast_constants_1.IdFocus];\n        return new ast_1.FunctionExpression(null, args, util_2.t1(_.block, ast_constants_1.DeclareLexicalThis));\n    }\n});\n"],"sourceRoot":"/source/"}