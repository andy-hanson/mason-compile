{"version":3,"sources":["private/transpile/transpileMisc.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,qBAAqB,EAAE,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;KAC3L;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,YAAY,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACnD,QAAI,YAAY,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACnD,QAAI,WAAW,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACjD,QAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5B,QAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACpC,QAAI,iBAAiB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACrD,QAAI,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC/C,QAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,aAAS,qBAAqB,CAAC,CAAC,EAAE;AAC9B,eAAO,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;KACtE;AACD,WAAO,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;AACtD,aAAS,cAAc,CAAC,CAAC,EAAE;AACvB,eAAO,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;KAChD;AACD,WAAO,CAAC,cAAc,GAAG,cAAc,CAAC;AACxC,aAAS,mBAAmB,CAAC,CAAC,EAAE;AAC5B,eAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,IAAI,WAAW,CAAC,cAAc,CAAC,IAAI,YAAY,CAAC,aAAa,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;KACtK;AACD,WAAO,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAClD,aAAS,kBAAkB,CAAC,IAAI,EAAE;AAC9B,eAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,MAAM,CAAC,MAAM,GAC3C,IAAI,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAClE,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KAClC;AACD,WAAO,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AAChD,aAAS,mBAAmB,CAAC,CAAC,EAAE;AAC5B,eAAO,OAAO,CAAC,KAAK,QAAQ,GAAG,IAAI,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KAChG;AACD,WAAO,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAClD,UAAM,WAAW,GAAG,IAAI,YAAY,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;CAC5E,CAAC,CAAC","file":"private/transpile/transpileMisc.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Expression', 'esast/lib/Identifier', 'esast/lib/Statement', 'op/Op', '../ast/Call', './esast-constants', './transpileVal', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Expression_1 = require('esast/lib/Expression');\n    var Identifier_1 = require('esast/lib/Identifier');\n    var Statement_1 = require('esast/lib/Statement');\n    var Op_1 = require('op/Op');\n    var Call_1 = require('../ast/Call');\n    var esast_constants_1 = require('./esast-constants');\n    var transpileVal_1 = require('./transpileVal');\n    var util_1 = require('./util');\n    function transpileLocalDeclare(_) {\n        return new Identifier_1.default(util_1.idForDeclareCached(_).name);\n    }\n    exports.transpileLocalDeclare = transpileLocalDeclare;\n    function transpileThrow(_) {\n        return util_1.loc(_, transpileThrowNoLoc(_));\n    }\n    exports.transpileThrow = transpileThrow;\n    function transpileThrowNoLoc(_) {\n        return Op_1.caseOp(_.opThrown, util_1.doThrow, () => new Statement_1.ThrowStatement(new Expression_1.NewExpression(esast_constants_1.GlobalError, [LitStrThrow])));\n    }\n    exports.transpileThrowNoLoc = transpileThrowNoLoc;\n    function transpileArguments(args) {\n        return args.map(_ => _ instanceof Call_1.Spread ?\n            new Expression_1.SpreadElement(transpileVal_1.default(_.spreaded)) :\n            transpileVal_1.default(_));\n    }\n    exports.transpileArguments = transpileArguments;\n    function transpileMemberName(_) {\n        return typeof _ === 'string' ? new Expression_1.LiteralString(_) : transpileVal_1.default(_);\n    }\n    exports.transpileMemberName = transpileMemberName;\n    const LitStrThrow = new Expression_1.LiteralString('An error occurred.');\n});\n"],"sourceRoot":"/source/"}