{"version":3,"sources":["private/parse/parseExcept.js"],"names":[],"mappings":";;AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,sBAAsB,CAAC,EAAE,OAAO,CAAC,CAAC;KACrI;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtC,QAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,QAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,QAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,QAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,QAAI,oBAAoB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC3D,aAAS,WAAW,CAAC,MAAM,EAAE;AACzB,cAAM,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;;uBAC5B,OAAO,CAAC,KAAK,CAAC;;;;cAA5B,IAAI;cAAE,IAAI;;gCACyB,gBAAgB,CAAC,IAAI,CAAC;;;;cAAzD,YAAY;cAAE,UAAU;cAAE,KAAK;;0BACd,UAAU,CAAC,KAAK,CAAC;;;;cAAlC,MAAM;cAAE,KAAK;;AACpB,cAAM,SAAS,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;AACxC,eAAO,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;KAC5F;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,WAAW,CAAC;AAC9B,aAAS,OAAO,CAAC,KAAK,EAAE;AACpB,cAAM,IAAI,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;AAC/B,gBAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AACxC,eAAO,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;KACxE;AACD,aAAS,gBAAgB,CAAC,KAAK,EAAE;AAC7B,cAAM,YAAY,GAAG,EAAE,CAAC;AACxB,YAAI,UAAU,GAAG,IAAI,CAAC;AACtB,eAAO,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;AACrB,kBAAM,IAAI,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;AAC/B,gBAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EACnC,MAAM;;wCACc,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;;;;kBAAzD,MAAM;kBAAE,KAAK;;AACpB,kBAAM,MAAM,GAAG,oBAAoB,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;AACrE,kBAAM,MAAM,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AAChF,iBAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;AACrB,gBAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;AACxB,0BAAU,GAAG,MAAM,CAAC;AACpB,sBAAM;aACT,MAEG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjC;AACD,eAAO,CAAC,YAAY,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;KAC5C;AACD,aAAS,UAAU,CAAC,KAAK,EAAE;AACvB,YAAI,KAAK,CAAC,OAAO,EAAE,EACf,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACzB,cAAM,IAAI,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;AAC/B,cAAM,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAC9B,eAAO,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,GACnC,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,GAC5D,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACrB;AACD,aAAS,cAAc,CAAC,KAAK,EAAE;AAC3B,YAAI,KAAK,CAAC,OAAO,EAAE,EACf,OAAO,IAAI,CAAC;AAChB,cAAM,IAAI,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;AAC/B,gBAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AACvC,iBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,mBAAmB,CAAC,CAAC;AAC3E,eAAO,YAAY,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;KACvD;CACJ,CAAC,CAAC","file":"private/parse/parseExcept.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../context', '../MsAst', '../Token', './checks', './parseBlock', './parseLocalDeclares'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var context_1 = require('../context');\n    var MsAst_1 = require('../MsAst');\n    var Token_1 = require('../Token');\n    var checks_1 = require('./checks');\n    var parseBlock_1 = require('./parseBlock');\n    var parseLocalDeclares_1 = require('./parseLocalDeclares');\n    function parseExcept(tokens) {\n        const lines = parseBlock_1.justBlock(56, tokens);\n        const [_try, rest] = takeTry(lines);\n        const [typedCatches, opCatchAll, rest2] = takeTypedCatches(rest);\n        const [opElse, rest3] = opTakeElse(rest2);\n        const opFinally = parseOpFinally(rest3);\n        return new MsAst_1.Except(tokens.loc, _try, typedCatches, opCatchAll, opElse, opFinally);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseExcept;\n    function takeTry(lines) {\n        const line = lines.headSlice();\n        checks_1.checkKeyword(108, line.head());\n        return [parseBlock_1.parseJustBlock(108, line.tail()), lines.tail()];\n    }\n    function takeTypedCatches(lines) {\n        const typedCatches = [];\n        let opCatchAll = null;\n        while (!lines.isEmpty()) {\n            const line = lines.headSlice();\n            if (!Token_1.isKeyword(44, line.head()))\n                break;\n            const [before, block] = parseBlock_1.beforeAndBlock(line.tail());\n            const caught = parseLocalDeclares_1.parseLocalDeclareOrFocus(before);\n            const _catch = new MsAst_1.Catch(line.loc, caught, parseBlock_1.default(block));\n            lines = lines.tail();\n            if (caught.opType === null) {\n                opCatchAll = _catch;\n                break;\n            }\n            else\n                typedCatches.push(_catch);\n        }\n        return [typedCatches, opCatchAll, lines];\n    }\n    function opTakeElse(lines) {\n        if (lines.isEmpty())\n            return [null, lines];\n        const line = lines.headSlice();\n        const tokenElse = line.head();\n        return Token_1.isKeyword(55, tokenElse) ?\n            [parseBlock_1.parseJustBlock(55, line.tail()), lines.tail()] :\n            [null, lines];\n    }\n    function parseOpFinally(lines) {\n        if (lines.isEmpty())\n            return null;\n        const line = lines.headSlice();\n        checks_1.checkKeyword(59, line.head());\n        context_1.check(lines.size() === 1, lines.loc, _ => _.nothingAfterFinally);\n        return parseBlock_1.parseJustBlock(59, line.tail());\n    }\n});\n"],"sourceRoot":"/source/"}