{"version":3,"sources":["private/parse/parseModule.js"],"names":[],"mappings":"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","file":"private/parse/parseModule.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../ast/locals', '../ast/Module', '../context', '../token/Group', '../token/Keyword', './checks', './parseBlock', './parseLine', './parseLocalDeclares', './parseName', './Slice', './tryTakeComment'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var locals_1 = require('../ast/locals');\n    var Module_1 = require('../ast/Module');\n    var context_1 = require('../context');\n    var Group_1 = require('../token/Group');\n    var Keyword_1 = require('../token/Keyword');\n    var checks_1 = require('./checks');\n    var parseBlock_1 = require('./parseBlock');\n    var parseLine_1 = require('./parseLine');\n    var parseLocalDeclares_1 = require('./parseLocalDeclares');\n    var parseName_1 = require('./parseName');\n    var Slice_1 = require('./Slice');\n    var tryTakeComment_1 = require('./tryTakeComment');\n    function parseModule(lines) {\n        const [opComment, rest0] = tryTakeComment_1.default(lines);\n        const [doImports, rest1] = takeImportDos(rest0);\n        const [plainImports, rest2] = takeImports(122, rest1);\n        const [lazyImports, rest3] = takeImports(124, rest2);\n        const moduleLines = parseLine_1.parseLines(rest3);\n        const imports = plainImports.concat(lazyImports);\n        return new Module_1.default(lines.loc, context_1.pathOptions.moduleName, opComment, doImports, imports, moduleLines);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseModule;\n    function takeImports(importKeywordKind, lines) {\n        if (!lines.isEmpty()) {\n            const line = lines.headSlice();\n            if (Keyword_1.isKeyword(importKeywordKind, line.head()))\n                return [parseImports(importKeywordKind, line.tail()), lines.tail()];\n        }\n        return [[], lines];\n    }\n    function parseImports(importKeywordKind, tokens) {\n        const lines = parseBlock_1.justBlock(importKeywordKind, tokens);\n        return lines.mapSlices(line => {\n            const { path, name } = parseRequire(line.head());\n            const rest = line.tail();\n            const { imported, opImportDefault } = parseThingsImported(rest, name, importKeywordKind === 124);\n            return new Module_1.Import(line.loc, path, imported, opImportDefault);\n        });\n    }\n    function takeImportDos(lines) {\n        if (!lines.isEmpty()) {\n            const line = lines.headSlice();\n            if (Keyword_1.isKeyword(123, line.head()))\n                return [parseImportDos(line.tail()), lines.tail()];\n        }\n        return [[], lines];\n    }\n    function parseImportDos(tokens) {\n        const lines = parseBlock_1.justBlock(123, tokens);\n        return lines.mapSlices(line => {\n            const [{ path, name }, rest] = takeRequire(line);\n            checks_1.checkEmpty(rest, _ => _.unexpectedAfterImportDo);\n            return new Module_1.ImportDo(line.loc, path);\n        });\n    }\n    function parseThingsImported(tokens, name, isLazy) {\n        const importDefault = () => locals_1.LocalDeclare.untyped(tokens.loc, name, isLazy ? 1 : 0);\n        if (tokens.isEmpty())\n            return { imported: [], opImportDefault: importDefault() };\n        else {\n            const [opImportDefault, rest] = Keyword_1.isKeyword(102, tokens.head()) ?\n                [importDefault(), tokens.tail()] :\n                [null, tokens];\n            const imported = parseLocalDeclares_1.parseLocalDeclaresJustNames(rest).map(l => {\n                context_1.check(l.name !== '_', l.loc, _ => _.noImportFocus);\n                if (isLazy)\n                    l.kind = 1;\n                return l;\n            });\n            return { imported: imported, opImportDefault: opImportDefault };\n        }\n    }\n    function takeRequire(tokens) {\n        return [parseRequire(tokens.head()), tokens.tail()];\n    }\n    function parseRequire(token) {\n        return Op_1.caseOp(parseName_1.tryParseName(token), name => ({ path: name, name: name }), () => {\n            if (token instanceof Group_1.GroupSpace) {\n                const tokens = Slice_1.Tokens.of(token);\n                let rest = tokens;\n                const parts = [];\n                const head = rest.head();\n                Op_1.opEach(tryTakeNDots(head), n => {\n                    parts.push('.');\n                    for (let i = 1; i < n; i = i + 1)\n                        parts.push('..');\n                    rest = rest.tail();\n                    while (!rest.isEmpty()) {\n                        const n = tryTakeNDots(rest.head());\n                        if (n === null)\n                            break;\n                        else {\n                            for (let i = 0; i < n; i = i + 1)\n                                parts.push('..');\n                            rest = rest.tail();\n                        }\n                    }\n                });\n                for (;;) {\n                    checks_1.checkNonEmpty(rest, _ => _.expectedImportModuleName);\n                    parts.push(parseName_1.default(rest.head()));\n                    rest = rest.tail();\n                    if (rest.isEmpty())\n                        break;\n                    checks_1.checkKeyword(94, rest.head());\n                    rest = rest.tail();\n                }\n                return { path: parts.join('/'), name: parts[parts.length - 1] };\n            }\n            else\n                context_1.fail(token.loc, _ => _.invalidImportModule);\n        });\n    }\n    function tryTakeNDots(token) {\n        if (token instanceof Keyword_1.default)\n            switch (token.kind) {\n                case 94:\n                    return 1;\n                case 95:\n                    return 2;\n                case 96:\n                    return 3;\n                default:\n                    return null;\n            }\n        else\n            return null;\n    }\n});\n"],"sourceRoot":"/source/"}