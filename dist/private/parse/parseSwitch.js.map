{"version":3,"sources":["private/parse/parseSwitch.js"],"names":[],"mappings":";;AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,eAAe,EAAE,eAAe,EAAE,kBAAkB,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,CAAC,EAAE,OAAO,CAAC,CAAC;KAC1J;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtC,QAAI,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACxC,QAAI,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACxC,QAAI,SAAS,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC5C,QAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,QAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,QAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACzC,aAAS,WAAW,CAAC,eAAe,EAAE,MAAM,EAAE;oCAClB,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC;;;;cAApD,MAAM;cAAE,KAAK;;AACpB,YAAI,eAAe,EACf,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,mBAAmB,CAAC,CAAC;AAC5D,cAAM,QAAQ,GAAG,eAAe,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxG,cAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;;mBACP,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,GAChE,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,YAAY,CAAC,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,GACjE,CAAC,KAAK,EAAE,IAAI,CAAC;;;;cAFV,SAAS;cAAE,MAAM;;AAGxB,cAAM,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,IAAI;yCACd,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC;;;;kBAAlD,MAAM;kBAAE,KAAK;;AACpB,mBAAO,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SAC7G,CAAC,CAAC;AACH,iBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,CAAC;AAC3E,eAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KACpE;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,WAAW,CAAC;CACjC,CAAC,CAAC","file":"private/parse/parseSwitch.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../context', '../ast/locals', '../ast/Switch', '../token/Keyword', './checks', './parseBlock', './parseExpr'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var context_1 = require('../context');\n    var locals_1 = require('../ast/locals');\n    var Switch_1 = require('../ast/Switch');\n    var Keyword_1 = require('../token/Keyword');\n    var checks_1 = require('./checks');\n    var parseBlock_1 = require('./parseBlock');\n    var parseExpr_1 = require('./parseExpr');\n    function parseSwitch(switchedFromFun, tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        if (switchedFromFun)\n            checks_1.checkEmpty(before, _ => _.switchArgIsImplicit);\n        const switched = switchedFromFun ? locals_1.LocalAccess.focus(tokens.loc) : parseExpr_1.default(before);\n        const lastLine = block.lastSlice();\n        const [partLines, opElse] = Keyword_1.isKeyword(97, lastLine.head()) ?\n            [block.rtail(), parseBlock_1.parseJustBlock(97, lastLine.tail())] :\n            [block, null];\n        const parts = partLines.mapSlices(line => {\n            const [before, block] = parseBlock_1.beforeAndBlock(line);\n            return new Switch_1.SwitchPart(line.loc, parseExpr_1.parseExprParts(before), parseBlock_1.default(block));\n        });\n        context_1.check(parts.length > 0, tokens.loc, _ => _.caseSwitchNeedsParts);\n        return new Switch_1.default(tokens.loc, switched, parts, opElse);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseSwitch;\n});\n"],"sourceRoot":"/source/"}