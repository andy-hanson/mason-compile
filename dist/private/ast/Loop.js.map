{"version":3,"sources":["private/ast/Loop.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,eAAe,EAAE,UAAU,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC;KACnF;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,QAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,QAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,UAAM,GAAG,SAAS,aAAa,CAAC,OAAO,CAAC;AACpC,mBAAW,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE;AAChC,iBAAK,CAAC,GAAG,CAAC,CAAC;AACX,gBAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,gBAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;KACJ;AACD,WAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AAClB,UAAM,QAAQ,SAAS,aAAa,CAAC,OAAO,CAAC;AACzC,mBAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE;AAC9B,iBAAK,CAAC,GAAG,CAAC,CAAC;AACX,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,gBAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;KACJ;AACD,WAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,UAAM,MAAM,SAAS,aAAa,CAAC,OAAO,CAAC;AACvC,mBAAW,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE;AAChC,iBAAK,CAAC,GAAG,CAAC,CAAC;AACX,gBAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,gBAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,gBAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACjD;KACJ;AACD,WAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AACxB,UAAM,QAAQ,SAAS,OAAO,CAAC,OAAO,CAAC;AACnC,mBAAW,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;AAC3B,iBAAK,CAAC,GAAG,CAAC,CAAC;AACX,gBAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,gBAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SAClB;KACJ;AACD,WAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,UAAM,KAAK,SAAS,aAAa,CAAC,MAAM,CAAC;AACrC,mBAAW,CAAC,GAAG,EAAkB;gBAAhB,OAAO,yDAAG,IAAI;;AAC3B,iBAAK,CAAC,GAAG,CAAC,CAAC;AACX,gBAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC1B;KACJ;AACD,WAAO,CAAC,KAAK,GAAG,KAAK,CAAC;CACzB,CAAC,CAAC","file":"private/ast/Loop.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", './LineContent', './locals', './MsAst'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var LineContent_1 = require('./LineContent');\n    var locals_1 = require('./locals');\n    var MsAst_1 = require('./MsAst');\n    class For extends LineContent_1.ValOrDo {\n        constructor(loc, opIteratee, block) {\n            super(loc);\n            this.opIteratee = opIteratee;\n            this.block = block;\n        }\n    }\n    exports.For = For;\n    class ForAsync extends LineContent_1.ValOrDo {\n        constructor(loc, iteratee, block) {\n            super(loc);\n            this.iteratee = iteratee;\n            this.block = block;\n        }\n    }\n    exports.ForAsync = ForAsync;\n    class ForBag extends LineContent_1.ValOnly {\n        constructor(loc, opIteratee, block) {\n            super(loc);\n            this.opIteratee = opIteratee;\n            this.block = block;\n            this.built = locals_1.LocalDeclare.built(loc);\n        }\n    }\n    exports.ForBag = ForBag;\n    class Iteratee extends MsAst_1.default {\n        constructor(loc, element, bag) {\n            super(loc);\n            this.element = element;\n            this.bag = bag;\n        }\n    }\n    exports.Iteratee = Iteratee;\n    class Break extends LineContent_1.DoOnly {\n        constructor(loc, opValue = null) {\n            super(loc);\n            this.opValue = opValue;\n        }\n    }\n    exports.Break = Break;\n});\n"],"sourceRoot":"/source/"}