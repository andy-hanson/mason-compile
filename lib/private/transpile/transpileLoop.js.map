{"version":3,"sources":["private/transpile/transpileLoop.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,uBAAvB,EAAgD,sBAAhD,EAAwE,oBAAxE,EAA8F,sBAA9F,EAAsH,gBAAtH,EAAwI,qBAAxI,EAA+J,OAA/J,EAAwK,WAAxK,EAAqL,mBAArL,EAA0M,MAA1M,EAAkN,kBAAlN,EAAsO,mBAAtO,EAA2P,gBAA3P,CAAP,EAAqR,OAArR,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,QAAI,gBAAgB,QAAQ,uBAAR,CAAhB,CAFuB;AAG3B,QAAI,eAAe,QAAQ,sBAAR,CAAf,CAHuB;AAI3B,QAAI,aAAa,QAAQ,oBAAR,CAAb,CAJuB;AAK3B,QAAI,eAAe,QAAQ,sBAAR,CAAf,CALuB;AAM3B,QAAI,SAAS,QAAQ,gBAAR,CAAT,CANuB;AAO3B,QAAI,cAAc,QAAQ,qBAAR,CAAd,CAPuB;AAQ3B,QAAI,OAAO,QAAQ,OAAR,CAAP,CARuB;AAS3B,QAAI,YAAY,QAAQ,WAAR,CAAZ,CATuB;AAU3B,QAAI,oBAAoB,QAAQ,mBAAR,CAApB,CAVuB;AAW3B,QAAI,OAAO,QAAQ,MAAR,CAAP,CAXuB;AAY3B,QAAI,mBAAmB,QAAQ,kBAAR,CAAnB,CAZuB;AAa3B,QAAI,oBAAoB,QAAQ,mBAAR,CAApB,CAbuB;AAc3B,QAAI,iBAAiB,QAAQ,gBAAR,CAAjB,CAduB;AAe3B,aAAS,oBAAT,OAAqD;YAArB,6BAAqB;YAAT,mBAAS;;AACjD,eAAO,iBAAiB,kBAAjB,CAAoC,QAAQ,UAAR,EAAoB,KAApB,CAApC,CAAP,CADiD;KAArD;AAGA,YAAQ,oBAAR,GAA+B,oBAA/B,CAlB2B;AAmB3B,aAAS,mBAAT,CAA6B,CAA7B,EAAgC;cACpB,aAAsB,EAAtB,WADoB;cACR,QAAU,EAAV,MADQ;;AAE5B,eAAO,eAAe,CAAf,EAAkB,QAAQ,UAAR,EAAoB,KAApB,CAAlB,CAAP,CAF4B;KAAhC;AAIA,YAAQ,mBAAR,GAA8B,mBAA9B,CAvB2B;AAwB3B,aAAS,yBAAT,QAA0E;mCAArC,SAAqC;YAAzB,iCAAyB;YAAhB,yBAAgB;YAAT,oBAAS;;AACtE,cAAM,OAAO,IAAI,WAAW,kBAAX,CAA8B,IAAlC,EAAwC,CAAC,kBAAkB,qBAAlB,CAAwC,OAAxC,CAAD,CAAxC,EAA4F,iBAAiB,OAAjB,CAAyB,KAAzB,CAA5F,EAA6H,EAAE,WAAW,IAAX,EAA/H,CAAP,CADgE;AAEtE,eAAO,KAAK,MAAL,CAAY,MAAZ,EAAoB,eAAe,OAAf,CAAuB,GAAvB,CAApB,EAAiD,IAAjD,CAAP,CAFsE;KAA1E;AAIA,YAAQ,yBAAR,GAAoC,yBAApC,CA5B2B;AA6B3B,aAAS,wBAAT,CAAkC,CAAlC,EAAqC;AACjC,eAAO,IAAI,YAAY,mBAAZ,CAAgC,IAAI,aAAa,eAAb,CAA6B,0BAA0B,CAA1B,CAAjC,CAApC,CAAP,CADiC;KAArC;AAGA,YAAQ,wBAAR,GAAmC,wBAAnC,CAhC2B;AAiC3B,aAAS,oBAAT,CAA8B,CAA9B,EAAiC;cACrB,aAAsB,EAAtB,WADqB;cACT,QAAU,EAAV,MADS;;AAE7B,cAAM,OAAO,eAAe,CAAf,EAAkB,QAAQ,UAAR,EAAoB,KAApB,CAAlB,CAAP,CAFuB;AAG7B,eAAO,iBAAiB,SAAjB,CAA2B,IAAI,YAAY,cAAZ,CAA2B,CAAC,kBAAkB,eAAlB,EAAmC,IAApC,EAA0C,WAA1C,CAA/B,CAA3B,CAAP,CAH6B;KAAjC;AAKA,YAAQ,oBAAR,GAA+B,oBAA/B,CAtC2B;AAuC3B,aAAS,mBAAT,CAA6B,CAA7B,EAAgC;AAC5B,eAAO,KAAK,MAAL,CAAY,EAAE,OAAF,EAAW,KAAK,IAAI,YAAY,eAAZ,CAA4B,eAAe,OAAf,CAAuB,CAAvB,CAAhC,CAAL,EAAiE,MAAM,IAAI,OAAO,cAAP,CAAsB,UAAU,aAAV,CAAwB,eAAxB,CAAwC,CAAxC,IAA6C,MAA7C,GAAsD,IAAtD,CAAhC,CAA/F,CAD4B;KAAhC;AAGA,YAAQ,mBAAR,GAA8B,mBAA9B,CA1C2B;AA2C3B,aAAS,OAAT,CAAiB,UAAjB,EAA6B,KAA7B,EAAoC;AAChC,cAAM,WAAW,iBAAiB,OAAjB,CAAyB,KAAzB,CAAX,CAD0B;AAEhC,eAAO,KAAK,MAAL,CAAY,UAAZ,EAAwB;gBAAG;gBAAS;mBAAU,IAAI,OAAO,cAAP,CAAsB,IAAI,cAAc,sBAAd,CAAqC,CAAC,IAAI,cAAc,kBAAd,CAAiC,kBAAkB,qBAAlB,CAAwC,OAAxC,CAArC,CAAD,CAAzC,CAA1B,EAA8J,eAAe,OAAf,CAAuB,GAAvB,CAA9J,EAA2L,QAA3L;SAAtB,EAA4N,MAAM,IAAI,OAAO,YAAP,CAAoB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,QAA1C,CAAN,CAA3P,CAFgC;KAApC;AAIA,aAAS,cAAT,CAAwB,GAAxB,EAA6B,IAA7B,EAAmC;AAC/B,eAAO,UAAU,aAAV,CAAwB,cAAxB,CAAuC,GAAvC,IAA8C,IAAI,OAAO,gBAAP,CAAwB,MAA5B,EAAoC,IAApC,CAA9C,GAA0F,IAA1F,CADwB;KAAnC;AAGA,UAAM,SAAS,IAAI,aAAa,OAAb,CAAqB,MAAzB,CAAT,CAlDqB;AAmD3B,UAAM,cAAc,IAAI,YAAY,eAAZ,CAA4B,kBAAkB,OAAlB,CAA9C,CAnDqB;CAA5B,CAPH","file":"private/transpile/transpileLoop.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Declaration', 'esast/lib/Expression', 'esast/lib/Function', 'esast/lib/Identifier', 'esast/lib/Loop', 'esast/lib/Statement', 'op/Op', './context', './esast-constants', './ms', './transpileBlock', './transpileLocals', './transpileVal'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Declaration_1 = require('esast/lib/Declaration');\n    var Expression_1 = require('esast/lib/Expression');\n    var Function_1 = require('esast/lib/Function');\n    var Identifier_1 = require('esast/lib/Identifier');\n    var Loop_1 = require('esast/lib/Loop');\n    var Statement_1 = require('esast/lib/Statement');\n    var Op_1 = require('op/Op');\n    var context_1 = require('./context');\n    var esast_constants_1 = require('./esast-constants');\n    var ms_1 = require('./ms');\n    var transpileBlock_1 = require('./transpileBlock');\n    var transpileLocals_1 = require('./transpileLocals');\n    var transpileVal_1 = require('./transpileVal');\n    function transpileForValNoLoc({ opIteratee, block }) {\n        return transpileBlock_1.blockWrapStatement(forLoop(opIteratee, block));\n    }\n    exports.transpileForValNoLoc = transpileForValNoLoc;\n    function transpileForDoNoLoc(_) {\n        const { opIteratee, block } = _;\n        return maybeLabelLoop(_, forLoop(opIteratee, block));\n    }\n    exports.transpileForDoNoLoc = transpileForDoNoLoc;\n    function transpileForAsyncValNoLoc({ iteratee: { element, bag }, block }) {\n        const func = new Function_1.FunctionExpression(null, [transpileLocals_1.transpileLocalDeclare(element)], transpileBlock_1.default(block), { generator: true });\n        return ms_1.msCall('$for', transpileVal_1.default(bag), func);\n    }\n    exports.transpileForAsyncValNoLoc = transpileForAsyncValNoLoc;\n    function transpileForAsyncDoNoLoc(_) {\n        return new Statement_1.ExpressionStatement(new Expression_1.YieldExpression(transpileForAsyncValNoLoc(_)));\n    }\n    exports.transpileForAsyncDoNoLoc = transpileForAsyncDoNoLoc;\n    function transpileForBagNoLoc(_) {\n        const { opIteratee, block } = _;\n        const loop = maybeLabelLoop(_, forLoop(opIteratee, block));\n        return transpileBlock_1.blockWrap(new Statement_1.BlockStatement([esast_constants_1.declareBuiltBag, loop, returnBuilt]));\n    }\n    exports.transpileForBagNoLoc = transpileForBagNoLoc;\n    function transpileBreakNoLoc(_) {\n        return Op_1.caseOp(_.opValue, _ => new Statement_1.ReturnStatement(transpileVal_1.default(_)), () => new Loop_1.BreakStatement(context_1.verifyResults.isBreakInSwitch(_) ? idLoop : null));\n    }\n    exports.transpileBreakNoLoc = transpileBreakNoLoc;\n    function forLoop(opIteratee, block) {\n        const blockAst = transpileBlock_1.default(block);\n        return Op_1.caseOp(opIteratee, ({ element, bag }) => new Loop_1.ForOfStatement(new Declaration_1.VariableDeclarationLet([new Declaration_1.VariableDeclarator(transpileLocals_1.transpileLocalDeclare(element))]), transpileVal_1.default(bag), blockAst), () => new Loop_1.ForStatement(null, null, null, blockAst));\n    }\n    function maybeLabelLoop(ast, loop) {\n        return context_1.verifyResults.loopNeedsLabel(ast) ? new Loop_1.LabeledStatement(idLoop, loop) : loop;\n    }\n    const idLoop = new Identifier_1.default('loop');\n    const returnBuilt = new Statement_1.ReturnStatement(esast_constants_1.idBuilt);\n});\n"],"sourceRoot":"/source/"}