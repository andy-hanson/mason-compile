{"version":3,"sources":["private/parse/parseCase.js"],"names":[],"mappings":"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","file":"private/parse/parseCase.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../ast/Case', '../ast/locals', '../context', '../token/Group', '../token/Keyword', './checks', './parseBlock', './parseExpr', './parseLocalDeclares', './parseSpaced', './Slice'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var Case_1 = require('../ast/Case');\n    var locals_1 = require('../ast/locals');\n    var context_1 = require('../context');\n    var Group_1 = require('../token/Group');\n    var Keyword_1 = require('../token/Keyword');\n    var checks_1 = require('./checks');\n    var parseBlock_1 = require('./parseBlock');\n    var parseExpr_1 = require('./parseExpr');\n    var parseLocalDeclares_1 = require('./parseLocalDeclares');\n    var parseSpaced_1 = require('./parseSpaced');\n    var Slice_1 = require('./Slice');\n    function parseCase(casedFromFun, tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        let opCased;\n        if (casedFromFun) {\n            checks_1.checkEmpty(before, _ => _.caseFocusIsImplicit);\n            opCased = null;\n        }\n        else\n            opCased = Op_1.opMap(parseExpr_1.opParseExpr(before), _ => locals_1.AssignSingle.focus(_.loc, _));\n        const lastLine = Slice_1.Tokens.of(block.last());\n        const [partLines, opElse] = Keyword_1.isKeyword(104, lastLine.head()) ?\n            [block.rtail(), parseBlock_1.parseJustBlock(104, lastLine.tail())] :\n            [block, null];\n        const parts = partLines.mapSlices(line => {\n            const [before, block] = parseBlock_1.beforeAndBlock(line);\n            return new Case_1.CasePart(line.loc, parseCaseTest(before), parseBlock_1.default(block));\n        });\n        context_1.check(parts.length > 0, tokens.loc, _ => _.caseSwitchNeedsParts);\n        return new Case_1.default(tokens.loc, opCased, parts, opElse);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseCase;\n    function parseCaseTest(tokens) {\n        const first = tokens.head();\n        if (first instanceof Group_1.GroupSpace && tokens.size() > 1) {\n            const ft = Slice_1.Tokens.of(first);\n            if (Keyword_1.isKeyword(96, ft.head())) {\n                const type = parseSpaced_1.default(ft.tail());\n                const locals = parseLocalDeclares_1.default(tokens.tail());\n                return new Case_1.Pattern(tokens.loc, type, locals);\n            }\n        }\n        return parseExpr_1.default(tokens);\n    }\n});\n"],"sourceRoot":"/source/"}