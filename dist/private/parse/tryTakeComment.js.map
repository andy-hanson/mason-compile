{"version":3,"sources":["private/parse/tryTakeComment.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,gBAAgB,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC;KACxE;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACxC,QAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAChC,aAAS,cAAc,CAAC,KAAK,EAAE;AAC3B,cAAM,QAAQ,GAAG,EAAE,CAAC;AACpB,YAAI,IAAI,GAAG,KAAK,CAAC;AACjB,eAAO,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;AACpB,kBAAM,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AAC5B,kBAAM,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;AACpB,gBAAI,CAAC,YAAY,OAAO,CAAC,UAAU,EAAE;AACjC,sBAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/B,wBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjB,oBAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;aACtB,MAEG,MAAM;SACb;AACD,eAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;KACzF;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,cAAc,CAAC;CACpC,CAAC,CAAC","file":"private/parse/tryTakeComment.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../token/Token', '../util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Token_1 = require('../token/Token');\n    var util_1 = require('../util');\n    function tryTakeComment(lines) {\n        const comments = [];\n        let rest = lines;\n        while (!rest.isEmpty()) {\n            const hs = rest.headSlice();\n            const h = hs.head();\n            if (h instanceof Token_1.DocComment) {\n                util_1.assert(hs.size() === 1);\n                comments.push(h);\n                rest = rest.tail();\n            }\n            else\n                break;\n        }\n        return [util_1.isEmpty(comments) ? null : comments.map(_ => _.text).join('\\n'), rest];\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = tryTakeComment;\n});\n"],"sourceRoot":"/source/"}