{"version":3,"sources":["private/verify/verifyBlock.js"],"names":[],"mappings":"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","file":"private/verify/verifyBlock.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../context', '../util', './autoBlockKind', './context', './locals', './verifyLines', './verifyVal'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var context_1 = require('../context');\n    var util_1 = require('../util');\n    var autoBlockKind_1 = require('./autoBlockKind');\n    var context_2 = require('./context');\n    var locals_1 = require('./locals');\n    var verifyLines_1 = require('./verifyLines');\n    var verifyVal_1 = require('./verifyVal');\n    function verifyBlockSK(_, sk) {\n        if (sk === 0)\n            verifyBlockDo(_);\n        else\n            verifyBlockVal(_);\n    }\n    exports.verifyBlockSK = verifyBlockSK;\n    function verifyBlockVal(_) {\n        const { lines, loc } = _;\n        context_1.check(!util_1.isEmpty(lines), loc, _ => _.blockNeedsContent);\n        const kind = autoBlockKind_1.default(lines, loc);\n        switch (kind) {\n            case 3:\n            case 4:\n            case 5:\n                verifyLines_1.verifyBuiltLines(lines, loc);\n                break;\n            case 1:\n                verifyLines_1.default(lines);\n                break;\n            case 2:\n                locals_1.plusLocals(verifyLines_1.default(util_1.rtail(lines)), () => verifyVal_1.ensureValAndVerify(util_1.last(lines)));\n                break;\n            default:\n                throw new Error(String(kind));\n        }\n        context_2.results.blockToKind.set(_, kind);\n    }\n    exports.verifyBlockVal = verifyBlockVal;\n    function verifyBlockDo(_) {\n        context_2.results.blockToKind.set(_, 0);\n        return verifyLines_1.default(_.lines);\n    }\n    exports.verifyBlockDo = verifyBlockDo;\n});\n"],"sourceRoot":"/source/"}