{"version":3,"sources":["private/transpile/transpileBlock.js"],"names":[],"mappings":"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","file":"private/transpile/transpileBlock.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/ast', '../util', './ast-constants', './context', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var ast_1 = require('esast/lib/ast');\n    var util_1 = require('../util');\n    var ast_constants_1 = require('./ast-constants');\n    var context_1 = require('./context');\n    var util_2 = require('./util');\n    function default_1(lead = null, opReturnType = null, follow = null) {\n        const kind = context_1.verifyResults.blockKind(this);\n        switch (kind) {\n            case 0:\n                util_1.assert(opReturnType === null);\n                return new ast_1.BlockStatement(util_1.cat(lead, util_2.tLines(this.lines), follow));\n            case 1:\n                return new ast_1.BlockStatement(util_1.cat(lead, util_2.tLines(util_1.rtail(this.lines)), util_2.t0(util_1.last(this.lines))));\n            case 2:\n                return transpileBlockReturn(util_2.t0(util_1.last(this.lines)), util_2.tLines(util_1.rtail(this.lines)), lead, opReturnType);\n            case 3:\n            case 4:\n            case 5: {\n                const declare = kind === 3 ?\n                    ast_constants_1.DeclareBuiltBag :\n                    kind === 4 ? ast_constants_1.DeclareBuiltMap : ast_constants_1.DeclareBuiltObj;\n                const body = util_1.cat(declare, util_2.tLines(this.lines));\n                return transpileBlockReturn(ast_constants_1.IdBuilt, body, lead, opReturnType);\n            }\n            default:\n                throw new Error(String(kind));\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = default_1;\n    function transpileBlockReturn(returned, lines, lead, opReturnType) {\n        const ret = new ast_1.ReturnStatement(util_2.maybeWrapInCheckInstance(returned, opReturnType, 'returned value'));\n        return new ast_1.BlockStatement(util_1.cat(lead, lines, ret));\n    }\n});\n"],"sourceRoot":"/source/"}