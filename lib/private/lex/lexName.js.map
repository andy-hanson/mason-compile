{"version":3,"sources":["private/lex/lexName.js"],"names":[],"mappings":"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","file":"private/lex/lexName.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Loc', 'op/Op', '../context', '../token/Keyword', '../token/Token', './chars', './groupContext', './sourceContext'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Loc_1 = require('esast/lib/Loc');\n    const Op_1 = require('op/Op');\n    const context_1 = require('../context');\n    const Keyword_1 = require('../token/Keyword');\n    const Token_1 = require('../token/Token');\n    const chars_1 = require('./chars');\n    const groupContext_1 = require('./groupContext');\n    const sourceContext_1 = require('./sourceContext');\n    function lexName(startPos, isInterpolation) {\n        const name = sourceContext_1.takeWhileWithPrev(chars_1.isNameCharacter);\n        if (name.endsWith('_')) {\n            if (name.length > 1)\n                handleNameText(startPos, name.slice(0, name.length - 1), false);\n            keyword(sourceContext_1.pos(), 110);\n        }\n        else\n            handleNameText(startPos, name, !isInterpolation);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = lexName;\n    function handleNameText(startPos, name, allowSpecialKeywords) {\n        Op_1.caseOp(Keyword_1.opKeywordKindFromName(name), kind => {\n            switch (kind) {\n                case 159:\n                case 166:\n                    context_1.check(allowSpecialKeywords, startPos, _ => _.noSpecialKeyword(kind));\n                    sourceContext_1.skipRestOfLine();\n                    if (kind === 159)\n                        keyword(startPos, 159);\n                    break;\n                default:\n                    keyword(startPos, kind);\n            }\n        }, () => {\n            groupContext_1.addToCurrentGroup(new Token_1.NameToken(new Loc_1.default(startPos, sourceContext_1.pos()), name));\n        });\n    }\n    function keyword(startPos, kind) {\n        groupContext_1.addToCurrentGroup(new Keyword_1.default(new Loc_1.default(startPos, sourceContext_1.pos()), kind));\n    }\n});\n"],"sourceRoot":"/source/"}