{"version":3,"sources":["private/parse/parseName.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE,OAAO,CAAC,CAAC;KAC5E;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5B,QAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,QAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,aAAS,SAAS,CAAC,KAAK,EAAE;AACtB,cAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;AACjC,YAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAClB,OAAO,IAAI,CAAC,KAEZ,MAAM,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACxC;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,SAAS,CAAC;AAC5B,aAAS,YAAY,CAAC,KAAK,EAAE;AACzB,eAAO,KAAK,YAAY,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,YAAY,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;KAClI;AACD,WAAO,CAAC,YAAY,GAAG,YAAY,CAAC;CACvC,CAAC,CAAC","file":"private/parse/parseName.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../Token', './checks'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var Token_1 = require('../Token');\n    var checks_1 = require('./checks');\n    function parseName(token) {\n        const name = tryParseName(token);\n        if (Op_1.nonNull(name))\n            return name;\n        else\n            throw checks_1.unexpected(token);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseName;\n    function tryParseName(token) {\n        return token instanceof Token_1.Name ? token.name : token instanceof Token_1.Keyword ? Token_1.tryGetKeywordName(token) : null;\n    }\n    exports.tryParseName = tryParseName;\n});\n"],"sourceRoot":"/source/"}