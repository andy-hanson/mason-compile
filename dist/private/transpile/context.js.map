{"version":3,"sources":["private/transpile/context.js","private/transpile/context.ts"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC;KAC3C;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;ACDjB,aAAA,KAAA,CAAsB,cAA6B,EAAA;AAClD,eAAA,CAAA,aAAa,GAAG,cAAc,CAAA;AAC9B,eAAA,CAAA,OAAO,GAAG,CAAU,CAAA;AACpB,eAAA,CAAA,kBAAkB,GAAG,CAAC,CAAA;KACtB;AAJe,WAAA,CAAA,KAAK,GAAA,KAIpB,CAAA;AAED,aAAA,QAAA,GAAA;AAEC,eAAA,CAAA,aAAa,GAAG,IAAI,CAAA;KACpB;AAHe,WAAA,CAAA,QAAQ,GAAA,QAGvB,CAAA;AAED,aAAA,iBAAA,GAAA;AACC,cAAM,CAAC,GAAG,OAAA,CAAA,kBAAkB,CAAA;AAC5B,eAAA,CAAA,kBAAkB,GAAG,OAAA,CAAA,kBAAkB,GAAG,CAAC,CAAA;AAC3C,eAAO,CAAC,CAAA;KACR;AAJe,WAAA,CAAA,iBAAiB,GAAA,iBAIhC,CAAA;AAED,aAAA,WAAA,CAA+B,UAAgB,EAAE,IAAa,EAAA;AAC7D,cAAM,UAAU,GAAG,OAAA,CAAA,OAAO,CAAA;AAC1B,eAAA,CAAA,OAAO,GAAG,UAAU,CAAA;AACpB,cAAM,CAAC,GAAG,IAAI,EAAE,CAAA;AAChB,eAAA,CAAA,OAAO,GAAG,UAAU,CAAA;AACpB,eAAO,CAAC,CAAA;KACR;AANe,WAAA,CAAA,WAAW,GAAA,WAM1B,CAAA;CDGA,CAAC,CAAC","file":"private/transpile/context.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    function setup(_verifyResults) {\n        exports.verifyResults = _verifyResults;\n        exports.funKind = 0;\n        exports.nextDestructuredId = 0;\n    }\n    exports.setup = setup;\n    function tearDown() {\n        exports.verifyResults = null;\n    }\n    exports.tearDown = tearDown;\n    function getDestructuredId() {\n        const _ = exports.nextDestructuredId;\n        exports.nextDestructuredId = exports.nextDestructuredId + 1;\n        return _;\n    }\n    exports.getDestructuredId = getDestructuredId;\n    function withFunKind(newFunKind, func) {\n        const oldFunKind = exports.funKind;\n        exports.funKind = newFunKind;\n        const _ = func();\n        exports.funKind = oldFunKind;\n        return _;\n    }\n    exports.withFunKind = withFunKind;\n});\n","import {Funs} from '../ast/Fun'\nimport VerifyResults from '../VerifyResults'\n\nexport let verifyResults: VerifyResults\nexport let funKind: Funs\nexport let nextDestructuredId: number\n\nexport function setup(_verifyResults: VerifyResults): void {\n\tverifyResults = _verifyResults\n\tfunKind = Funs.Plain\n\tnextDestructuredId = 0\n}\n\nexport function tearDown(): void {\n\t// Release for garbage collection.\n\tverifyResults = null\n}\n\nexport function getDestructuredId(): number {\n\tconst _ = nextDestructuredId\n\tnextDestructuredId = nextDestructuredId + 1\n\treturn _\n}\n\nexport function withFunKind<A>(newFunKind: Funs, func: () => A): A {\n\tconst oldFunKind = funKind\n\tfunKind = newFunKind\n\tconst _ = func()\n\tfunKind = oldFunKind\n\treturn _\n}\n"],"sourceRoot":"/source/"}