{"version":3,"sources":["private/transpile/transpile.js","private/transpile/transpile.ts"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,mBAAmB,CAAC,EAAE,OAAO,CAAC,CAAC;KAC7E;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;ACLjB,QAAA,SAAA,GAAA,OAAA,CAA6C,WAC7C,CAAC,CADuD;AACxD,QAAA,iBAAA,GAAA,OAAA,CAA4B,mBAG5B,CAAC,CAH8C;AAG/C,aAAA,SAAA,CAAkC,gBAAwB,EAAE,aAA4B,EAAA;AACvF,iBAAA,CAAA,KAAK,CAAC,aAAa,CAAC,CAAA;AACpB,cAAM,GAAG,GAAG,iBAAA,CAAA,OAAe,CAAC,gBAAgB,CAAC,CAAA;AAC7C,iBAAA,CAAA,QAAQ,EAAE,CAAA;AACV,eAAO,GAAG,CAAA;KACV;AALD,UAAA,CAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,CAAA;ADWI,WAAO,CAAC,OAAO,GAAG,SCNrB,CAAA;CDOA,CAAC,CAAC","file":"private/transpile/transpile.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", './context', './transpileModule'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var context_1 = require('./context');\n    var transpileModule_1 = require('./transpileModule');\n    function transpile(moduleExpression, verifyResults) {\n        context_1.setup(verifyResults);\n        const res = transpileModule_1.default(moduleExpression);\n        context_1.tearDown();\n        return res;\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = transpile;\n});\n","import {Module as EsModule} from 'esast/lib/Program'\nimport Module from '../ast/Module'\nimport VerifyResults from '../VerifyResults'\nimport {setup, tearDown, verifyResults} from './context'\nimport transpileModule from './transpileModule'\n\n/** Transform a [[MsAst]] into an esast. **/\nexport default function transpile(moduleExpression: Module, verifyResults: VerifyResults): EsModule {\n\tsetup(verifyResults)\n\tconst res = transpileModule(moduleExpression)\n\ttearDown()\n\treturn res\n}\n"],"sourceRoot":"/source/"}