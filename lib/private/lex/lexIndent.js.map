{"version":3,"sources":["private/lex/lexIndent.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,YAAvB,EAAqC,iBAArC,CAAP,EAAgE,OAAhE,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,UAAM,YAAY,QAAQ,YAAR,CAAZ,CAFqB;AAG3B,UAAM,kBAAkB,QAAQ,iBAAR,CAAlB,CAHqB;AAI3B,aAAS,SAAT,GAAqB;AACjB,cAAM,YAAY,UAAU,cAAV,CAAyB,MAAzB,CADD;AAEjB,YAAI,OAAO,SAAP,KAAqB,QAArB,EAA+B;AAC/B,kBAAM,SAAS,gBAAgB,UAAhB,EAAT,CADyB;AAE/B,sBAAU,KAAV,CAAgB,SAAS,SAAT,KAAuB,CAAvB,EAA0B,gBAAgB,GAAhB,EAAqB,KAAK,EAAE,eAAF,CAAkB,SAAlB,CAAL,CAA/D,CAF+B;AAG/B,mBAAO,SAAS,SAAT,CAHwB;SAAnC,MAKK;AACD,kBAAM,SAAS,gBAAgB,QAAhB,EAAT,CADL;AAED,sBAAU,KAAV,CAAgB,gBAAgB,IAAhB,OAA2B,EAA3B,EAA+B,gBAAgB,GAAhB,EAAqB,KAAK,EAAE,cAAF,CAAzE,CAFC;AAGD,mBAAO,MAAP,CAHC;SALL;KAFJ;AAaA,WAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C,EAjB2B;AAkB3B,YAAQ,OAAR,GAAkB,SAAlB,CAlB2B;CAA5B,CAPH","file":"private/lex/lexIndent.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../context', './sourceContext'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const context_1 = require('../context');\n    const sourceContext_1 = require('./sourceContext');\n    function lexIndent() {\n        const optIndent = context_1.compileOptions.indent;\n        if (typeof optIndent === 'number') {\n            const spaces = sourceContext_1.skipSpaces();\n            context_1.check(spaces % optIndent === 0, sourceContext_1.pos, _ => _.badSpacedIndent(optIndent));\n            return spaces / optIndent;\n        }\n        else {\n            const indent = sourceContext_1.skipTabs();\n            context_1.check(sourceContext_1.peek() !== 32, sourceContext_1.pos, _ => _.noLeadingSpace);\n            return indent;\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = lexIndent;\n});\n"],"sourceRoot":"/source/"}