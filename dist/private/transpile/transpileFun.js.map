{"version":3,"sources":["private/transpile/transpileFun.js"],"names":[],"mappings":"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","file":"private/transpile/transpileFun.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Expression', 'esast/lib/Function', 'esast/lib/Identifier', 'esast/lib/Statement', 'esast-create-util/lib/util', 'op/Op', '../context', '../util', './context', './esast-constants', './transpileBlock', './transpileMisc', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Expression_1 = require('esast/lib/Expression');\n    var Function_1 = require('esast/lib/Function');\n    var Identifier_1 = require('esast/lib/Identifier');\n    var Statement_1 = require('esast/lib/Statement');\n    var util_1 = require('esast-create-util/lib/util');\n    var Op_1 = require('op/Op');\n    var context_1 = require('../context');\n    var util_2 = require('../util');\n    var context_2 = require('./context');\n    var esast_constants_1 = require('./esast-constants');\n    var transpileBlock_1 = require('./transpileBlock');\n    var transpileMisc_1 = require('./transpileMisc');\n    var util_3 = require('./util');\n    function transpileFun(_, leadStatements = null, dontDeclareThis = false) {\n        return util_3.loc(_, transpileFunNoLoc(_, leadStatements, dontDeclareThis));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = transpileFun;\n    function transpileFunNoLoc(_, leadStatements = null, dontDeclareThis = false) {\n        const { args, opRestArg, block, kind, opDeclareThis, isDo, opReturnType } = _;\n        return context_2.withFunKind(kind, () => {\n            const nArgs = new Expression_1.LiteralNumber(args.length);\n            const opDeclareRest = Op_1.opMap(opRestArg, rest => util_3.makeDeclare(rest, new Expression_1.CallExpression(ArraySliceCall, [IdArguments, nArgs])));\n            const argChecks = Op_1.opIf(context_1.options.checks, () => Op_1.flatMapOps(args, util_3.opTypeCheckForLocalDeclare));\n            const opDeclareThisAst = Op_1.opIf(opDeclareThis !== null && !dontDeclareThis, () => esast_constants_1.DeclareLexicalThis);\n            const lead = util_2.cat(opDeclareRest, opDeclareThisAst, argChecks, leadStatements);\n            const body = () => transpileBlock_1.default(block, lead, opReturnType);\n            const argAsts = args.map(transpileMisc_1.transpileLocalDeclare);\n            const id = Op_1.opMap(context_2.verifyResults.opName(_), util_1.identifier);\n            switch (kind) {\n                case 0:\n                    return id === null && opDeclareThis === null && opDeclareRest === null ?\n                        new Function_1.ArrowFunctionExpression(argAsts, body()) :\n                        new Function_1.FunctionExpression(id, argAsts, body());\n                case 1: {\n                    const plainBody = transpileBlock_1.default(block, null, opReturnType);\n                    const genFunc = new Function_1.FunctionExpression(null, [], plainBody, { generator: true });\n                    const ret = new Statement_1.ReturnStatement(util_3.msCall('async', genFunc));\n                    return new Function_1.FunctionExpression(id, argAsts, new Statement_1.BlockStatement(util_2.cat(lead, ret)));\n                }\n                case 2:\n                    return new Function_1.FunctionExpression(id, argAsts, body(), { generator: true });\n                default:\n                    throw new Error(String(kind));\n            }\n        });\n    }\n    exports.transpileFunNoLoc = transpileFunNoLoc;\n    const ArraySliceCall = util_1.member(util_1.member(new Expression_1.ArrayExpression([]), 'slice'), 'call');\n    const IdArguments = new Identifier_1.default('arguments');\n});\n"],"sourceRoot":"/source/"}