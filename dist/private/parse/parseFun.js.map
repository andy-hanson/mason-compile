{"version":3,"sources":["private/parse/parseFun.js"],"names":[],"mappings":"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","file":"private/parse/parseFun.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../ast/Block', '../ast/Fun', '../ast/locals', '../token/Group', '../token/Keyword', '../util', './checks', './parseBlock', './parseCase', './parseLocalDeclares', './parseSpaced', './parseSwitch', './Slice', './tryTakeComment'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Block_1 = require('../ast/Block');\n    var Fun_1 = require('../ast/Fun');\n    var locals_1 = require('../ast/locals');\n    var Group_1 = require('../token/Group');\n    var Keyword_1 = require('../token/Keyword');\n    var util_1 = require('../util');\n    var checks_1 = require('./checks');\n    var parseBlock_1 = require('./parseBlock');\n    var parseCase_1 = require('./parseCase');\n    var parseLocalDeclares_1 = require('./parseLocalDeclares');\n    var parseSpaced_1 = require('./parseSpaced');\n    var parseSwitch_1 = require('./parseSwitch');\n    var Slice_1 = require('./Slice');\n    var tryTakeComment_1 = require('./tryTakeComment');\n    function parseFun(keywordKind, tokens) {\n        const [isThisFun, isDo, kind] = funKind(keywordKind);\n        const [opReturnType, rest] = tryTakeReturnType(tokens);\n        const { args, opRestArg, block } = funArgsAndBlock(rest, !isDo);\n        return new Fun_1.default(tokens.loc, args, opRestArg, block, { kind: kind, isThisFun: isThisFun, isDo: isDo, opReturnType: opReturnType });\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseFun;\n    function parseFunLike(keywordKind, tokens) {\n        const [isThisFun, isDo, kind] = funKind(keywordKind);\n        const [opReturnType, rest] = tryTakeReturnType(tokens);\n        const [before, blockLines] = parseBlock_1.beforeAndBlock(rest);\n        const [opComment, restLines] = tryTakeComment_1.default(blockLines);\n        if (restLines.size() === 1) {\n            const h = restLines.headSlice();\n            if (h.size() === 1 && Keyword_1.isKeyword(76, h.head())) {\n                const { args, opRestArg } = parseFunLocals(before);\n                return new Fun_1.FunAbstract(tokens.loc, args, opRestArg, opReturnType, opComment);\n            }\n        }\n        const { args, opRestArg, block } = funArgsAndBlock(rest, !isDo);\n        return new Fun_1.default(tokens.loc, args, opRestArg, block, { kind: kind, isThisFun: isThisFun, isDo: isDo, opReturnType: opReturnType });\n    }\n    exports.parseFunLike = parseFunLike;\n    function funArgsAndBlock(tokens, isVal, includeMemberArgs = false) {\n        checks_1.checkNonEmpty(tokens, _ => _.expectedBlock);\n        const h = tokens.head();\n        if (Keyword_1.isAnyKeyword(funFocusKeywords, h)) {\n            const expr = (h.kind === 85 ? parseCase_1.default : parseSwitch_1.default)(true, tokens.tail());\n            const args = [locals_1.LocalDeclare.focus(h.loc)];\n            return { args: args, opRestArg: null, memberArgs: [], block: new Block_1.default(tokens.loc, null, [expr]) };\n        }\n        else {\n            const [before, blockLines] = parseBlock_1.beforeAndBlock(tokens);\n            const { args, opRestArg, memberArgs } = parseFunLocals(before, includeMemberArgs);\n            const block = parseBlock_1.default(blockLines);\n            return { args: args, opRestArg: opRestArg, memberArgs: memberArgs, block: block };\n        }\n    }\n    exports.funArgsAndBlock = funArgsAndBlock;\n    const funFocusKeywords = new Set([85, 144]);\n    function funKind(keywordKind) {\n        switch (keywordKind) {\n            case 107:\n                return [false, false, 0];\n            case 108:\n                return [false, true, 0];\n            case 109:\n                return [true, false, 0];\n            case 110:\n                return [true, true, 0];\n            case 111:\n                return [false, false, 1];\n            case 112:\n                return [false, true, 1];\n            case 113:\n                return [true, false, 1];\n            case 114:\n                return [true, true, 1];\n            case 115:\n                return [false, false, 2];\n            case 116:\n                return [false, true, 2];\n            case 117:\n                return [true, false, 2];\n            case 118:\n                return [true, true, 2];\n            default:\n                throw new Error(String(keywordKind));\n        }\n    }\n    function tryTakeReturnType(tokens) {\n        if (!tokens.isEmpty()) {\n            const h = tokens.head();\n            if (h instanceof Group_1.GroupSpace && Keyword_1.isKeyword(89, util_1.head(h.subTokens)))\n                return [parseSpaced_1.default(Slice_1.Tokens.of(h).tail()), tokens.tail()];\n        }\n        return [null, tokens];\n    }\n    function parseFunLocals(tokens, includeMemberArgs = false) {\n        if (tokens.isEmpty())\n            return { args: [], memberArgs: [], opRestArg: null };\n        else {\n            let rest = tokens, opRestArg = null;\n            const l = tokens.last();\n            if (l instanceof Group_1.GroupSpace) {\n                const g = Slice_1.Tokens.of(l);\n                if (Keyword_1.isKeyword(96, g.head())) {\n                    rest = tokens.rtail();\n                    opRestArg = parseLocalDeclares_1.parseLocalDeclareFromSpaced(g.tail());\n                }\n            }\n            if (includeMemberArgs) {\n                const { declares: args, memberArgs } = parseLocalDeclares_1.parseLocalDeclaresAndMemberArgs(rest);\n                return { args: args, memberArgs: memberArgs, opRestArg: opRestArg };\n            }\n            else\n                return { args: parseLocalDeclares_1.default(rest), memberArgs: [], opRestArg: opRestArg };\n        }\n    }\n});\n"],"sourceRoot":"/source/"}