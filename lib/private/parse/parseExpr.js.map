{"version":3,"sources":["private/parse/parseExpr.js"],"names":[],"mappings":";;AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,eAAhC,EAAiD,cAAjD,EAAiE,iBAAjE,EAAoF,aAApF,EAAmG,cAAnG,EAAmH,eAAnH,EAAoI,YAApI,EAAkJ,aAAlJ,EAAiK,kBAAjK,EAAqL,YAArL,EAAmM,gBAAnM,EAAqN,kBAArN,EAAyO,SAAzO,EAAoP,UAApP,EAAgQ,cAAhQ,EAAgR,cAAhR,EAAgS,aAAhS,EAA+S,YAA/S,EAA6T,eAA7T,EAA8U,YAA9U,EAA4V,iBAA5V,EAA+W,mBAA/W,EAAoY,aAApY,EAAmZ,aAAnZ,EAAka,eAAla,EAAmb,eAAnb,EAAoc,cAApc,EAAod,sBAApd,EAA4e,SAA5e,CAAP,EAA+f,OAA/f,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,UAAM,OAAO,QAAQ,OAAR,CAAP,CAFqB;AAG3B,UAAM,QAAQ,QAAQ,eAAR,CAAR,CAHqB;AAI3B,UAAM,UAAU,QAAQ,cAAR,CAAV,CAJqB;AAK3B,UAAM,aAAa,QAAQ,iBAAR,CAAb,CALqB;AAM3B,UAAM,SAAS,QAAQ,aAAR,CAAT,CANqB;AAO3B,UAAM,UAAU,QAAQ,cAAR,CAAV,CAPqB;AAQ3B,UAAM,WAAW,QAAQ,eAAR,CAAX,CARqB;AAS3B,UAAM,QAAQ,QAAQ,YAAR,CAAR,CATqB;AAU3B,UAAM,SAAS,QAAQ,aAAR,CAAT,CAVqB;AAW3B,UAAM,cAAc,QAAQ,kBAAR,CAAd,CAXqB;AAY3B,UAAM,YAAY,QAAQ,YAAR,CAAZ,CAZqB;AAa3B,UAAM,UAAU,QAAQ,gBAAR,CAAV,CAbqB;AAc3B,UAAM,YAAY,QAAQ,kBAAR,CAAZ,CAdqB;AAe3B,UAAM,SAAS,QAAQ,SAAR,CAAT,CAfqB;AAgB3B,UAAM,WAAW,QAAQ,UAAR,CAAX,CAhBqB;AAiB3B,UAAM,eAAe,QAAQ,cAAR,CAAf,CAjBqB;AAkB3B,UAAM,eAAe,QAAQ,cAAR,CAAf,CAlBqB;AAmB3B,UAAM,cAAc,QAAQ,aAAR,CAAd,CAnBqB;AAoB3B,UAAM,aAAa,QAAQ,YAAR,CAAb,CApBqB;AAqB3B,UAAM,gBAAgB,QAAQ,eAAR,CAAhB,CArBqB;AAsB3B,UAAM,aAAa,QAAQ,YAAR,CAAb,CAtBqB;AAuB3B,UAAM,kBAAkB,QAAQ,iBAAR,CAAlB,CAvBqB;AAwB3B,UAAM,oBAAoB,QAAQ,mBAAR,CAApB,CAxBqB;AAyB3B,UAAM,cAAc,QAAQ,aAAR,CAAd,CAzBqB;AA0B3B,UAAM,cAAc,QAAQ,aAAR,CAAd,CA1BqB;AA2B3B,UAAM,gBAAgB,QAAQ,eAAR,CAAhB,CA3BqB;AA4B3B,UAAM,gBAAgB,QAAQ,eAAR,CAAhB,CA5BqB;AA6B3B,UAAM,eAAe,QAAQ,cAAR,CAAf,CA7BqB;AA8B3B,UAAM,uBAAuB,QAAQ,sBAAR,CAAvB,CA9BqB;AA+B3B,UAAM,UAAU,QAAQ,SAAR,CAAV,CA/BqB;AAgC3B,aAAS,SAAT,CAAmB,MAAnB,EAA2B;AACvB,eAAO,KAAK,MAAL,CAAY,OAAO,WAAP,CAAmB,KAAK,UAAU,SAAV,CAAoB,GAApB,EAAyB,CAAzB,CAAL,CAA/B,EAAkE,KAAK,eAAe,OAAO,GAAP,EAAY,CAA3B,CAAL,EAAoC,MAAM,eAAe,MAAf,CAAN,CAA7G,CADuB;KAA3B;AAGA,WAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C,EAnC2B;AAoC3B,YAAQ,OAAR,GAAkB,SAAlB,CApC2B;AAqC3B,aAAS,WAAT,CAAqB,MAArB,EAA6B;AACzB,eAAO,KAAK,IAAL,CAAU,CAAC,OAAO,OAAP,EAAD,EAAmB,MAAM,UAAU,MAAV,CAAN,CAApC,CADyB;KAA7B;AAGA,YAAQ,WAAR,GAAsB,WAAtB,CAxC2B;AAyC3B,aAAS,cAAT,CAAwB,MAAxB,EAAgC;AAC5B,eAAO,KAAK,MAAL,CAAY,OAAO,WAAP,CAAmB,cAAnB,CAAZ,EAAgD;gBAAG;gBAAQ;gBAAI;mBAAY,OAAO,GAAP,CAAW,OAAO,GAAP,CAAW,cAAc,OAAd,CAAtB,EAA8C,YAAY,EAAZ,EAAgB,KAAhB,CAA9C;SAA3B,EAAkG,MAAM;AAC3J,kBAAM,OAAO,OAAO,IAAP,EAAP,CADqJ;AAE3J,gBAAI,gBAAgB,QAAQ,gBAAR,EAA0B;AAC1C,sBAAM,IAAI,QAAQ,MAAR,CAAe,EAAf,CAAkB,IAAlB,EAAwB,IAAxB,EAAJ,CADoC;AAE1C,oBAAI,eAAe,CAAf,CAAJ,EACI,UAAU,IAAV,CAAe,EAAE,GAAF,EAAO,KAAK,EAAE,WAAF,CAA3B,CADJ;aAFJ;AAKA,mBAAO,OAAO,GAAP,CAAW,cAAc,OAAd,CAAlB,CAP2J;SAAN,CAAzJ,CAD4B;KAAhC;AAWA,YAAQ,cAAR,GAAyB,cAAzB,CApD2B;AAqD3B,aAAS,eAAT,CAAyB,MAAzB,EAAiC,CAAjC,EAAoC,OAApC,EAA6C;AACzC,cAAM,QAAQ,eAAe,MAAf,CAAR,CADmC;AAEzC,kBAAU,KAAV,CAAgB,MAAM,MAAN,KAAiB,CAAjB,EAAoB,OAAO,GAAP,EAAY,OAAhD,EAFyC;AAGzC,eAAO,KAAP,CAHyC;KAA7C;AAKA,YAAQ,eAAR,GAA0B,eAA1B,CA1D2B;AA2D3B,aAAS,cAAT,CAAwB,GAAxB,EAA6B,MAA7B,EAAqC;AACjC,cAAM,QAAQ,OAAO,CAAP,EAAU,MAAV,CADmB;AAEjC,iBAAS,aAAT,CAAuB,KAAvB,EAA8B,KAAK,EAAE,UAAF,CAAa,OAAO,CAAP,EAAU,EAAV,CAAlB,CAA9B,CAFiC;AAGjC,cAAM,eAAe,MAAM,KAAN,EAAf,CAH2B;AAIjC,cAAM,QAAQ,EAAR,CAJ2B;AAKjC,aAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,OAAO,MAAP,GAAgB,CAAhB,EAAmB,IAAI,IAAI,CAAJ,EAAO;AAC9C,kBAAM,YAAY,OAAO,CAAP,EAAU,MAAV,CAAiB,IAAjB,EAAZ,CADwC;AAE9C,kBAAM,OAAO,kBAAkB,OAAlB,CAA0B,SAA1B,CAAP,CAFwC;AAG9C,kBAAM,cAAc,MAAM,OAAO,MAAP,GAAgB,CAAhB,GACtB,OAAO,IAAI,CAAJ,CAAP,CAAc,MAAd,GACA,OAAO,IAAI,CAAJ,CAAP,CAAc,MAAd,CAAqB,KAArB,EAFgB,CAH0B;AAM9C,kBAAM,QAAQ,eAAe,WAAf,CAAR,CANwC;AAO9C,kBAAM,MAAM,IAAI,MAAM,OAAN,CAAc,UAAU,GAAV,CAAc,KAAd,EAAqB,YAAY,GAAZ,CAAgB,GAAhB,CAA7C,CAPwC;AAQ9C,kBAAM,IAAN,CAAW,IAAI,MAAM,OAAN,CAAc,GAAlB,EAAuB,IAAvB,EAA6B,KAA7B,CAAX,EAR8C;SAAlD;AAUA,cAAM,MAAM,IAAI,MAAM,SAAN,CAAgB,GAApB,EAAyB,KAAzB,CAAN,CAf2B;AAgBjC,YAAI,aAAa,OAAb,EAAJ,EACI,OAAO,GAAP,CADJ,KAEK;AACD,kBAAM,QAAQ,eAAe,YAAf,CAAR,CADL;AAED,mBAAO,IAAI,OAAO,OAAP,CAAe,GAAnB,EAAwB,OAAO,IAAP,CAAY,KAAZ,CAAxB,EAA4C,OAAO,GAAP,CAAW,OAAO,IAAP,CAAY,KAAZ,CAAX,EAA+B,GAA/B,CAA5C,CAAP,CAFC;SAFL;KAhBJ;AAuBA,aAAS,WAAT,CAAqB,EAArB,EAAyB,KAAzB,EAAgC;cACpB,OAAS,GAAT,KADoB;;AAE5B,gBAAQ,IAAR;AACI,iBAAK,EAAL;AACI,uBAAO,IAAI,QAAQ,OAAR,CAAgB,GAAG,GAAH,EAAQ,eAAe,KAAf,CAA5B,CAAP,CADJ;AADJ,iBAGS,EAAL;AACI,uBAAO,YAAY,OAAZ,CAAoB,KAApB,CAAP,CADJ;AAHJ,iBAKS,EAAL;AACI,uBAAO,aAAa,OAAb,CAAqB,KAArB,CAAP,CADJ;AALJ,iBAOS,EAAL;AACI,uBAAO,UAAU,KAAV,CAAP,CADJ;AAPJ,iBASS,GAAL;AACI,uBAAO,WAAW,OAAX,CAAmB,KAAnB,CAAP,CADJ;AATJ,iBAWS,GAAL;AACI,uBAAO,cAAc,OAAd,CAAsB,KAAtB,CAAP,CADJ;AAXJ,iBAaS,GAAL;AACI,uBAAO,WAAW,QAAX,CAAoB,KAApB,CAAP,CADJ;AAbJ,iBAeS,GAAL;AACI,uBAAO,WAAW,aAAX,CAAyB,KAAzB,CAAP,CADJ;AAfJ,iBAiBS,GAAL;AACI,uBAAO,WAAW,WAAX,CAAuB,KAAvB,CAAP,CADJ;AAjBJ,iBAmBS,GAAL,CAnBJ;AAoBI,iBAAK,GAAL,CApBJ;AAqBI,iBAAK,GAAL,CArBJ;AAsBI,iBAAK,GAAL,CAtBJ;AAuBI,iBAAK,GAAL,CAvBJ;AAwBI,iBAAK,GAAL,CAxBJ;AAyBI,iBAAK,GAAL,CAzBJ;AA0BI,iBAAK,GAAL,CA1BJ;AA2BI,iBAAK,GAAL,CA3BJ;AA4BI,iBAAK,GAAL,CA5BJ;AA6BI,iBAAK,GAAL,CA7BJ;AA8BI,iBAAK,GAAL;AACI,uBAAO,gBAAgB,OAAhB,CAAwB,GAAG,IAAH,EAAS,KAAjC,CAAP,CADJ;AA9BJ,iBAgCS,GAAL,CAhCJ;AAiCI,iBAAK,GAAL;AACI,uBAAO,iBAAiB,GAAG,IAAH,EAAS,KAA1B,CAAP,CADJ;AAjCJ,iBAmCS,GAAL;AAAU;AACN,0BAAM,QAAQ,eAAe,KAAf,CAAR,CADA;AAEN,2BAAO,IAAI,OAAO,GAAP,CAAW,GAAG,GAAH,EAAQ,OAAO,IAAP,CAAY,KAAZ,CAAvB,EAA2C,OAAO,IAAP,CAAY,KAAZ,CAA3C,CAAP,CAFM;iBAAV;AAnCJ,iBAuCS,GAAL,CAvCJ;AAwCI,iBAAK,GAAL,CAxCJ;AAyCI,iBAAK,GAAL,CAzCJ;AA0CI,iBAAK,GAAL,CA1CJ;AA2CI,iBAAK,GAAL,CA3CJ;AA4CI,iBAAK,GAAL,CA5CJ;AA6CI,iBAAK,GAAL,CA7CJ;AA8CI,iBAAK,GAAL,CA9CJ;AA+CI,iBAAK,GAAL,CA/CJ;AAgDI,iBAAK,GAAL,CAhDJ;AAiDI,iBAAK,GAAL,CAjDJ;AAkDI,iBAAK,GAAL,CAlDJ;AAmDI,iBAAK,GAAL,CAnDJ;AAoDI,iBAAK,GAAL;AACI,uBAAO,IAAI,MAAM,QAAN,CAAe,GAAG,GAAH,EAAQ,UAAU,yBAAV,CAAoC,IAApC,CAA3B,EAAsE,eAAe,KAAf,CAAtE,CAAP,CADJ;AApDJ,iBAsDS,GAAL;AACI,uBAAO,YAAY,OAAZ,CAAoB,KAApB,CAAP,CADJ;AAtDJ,iBAwDS,GAAL;AACI,uBAAO,YAAY,OAAZ,CAAoB,KAApB,CAAP,CADJ;AAxDJ,iBA0DS,GAAL;AACI,uBAAO,IAAI,QAAQ,SAAR,CAAkB,GAAG,GAAH,EAAQ,eAAe,KAAf,CAA9B,CAAP,CADJ;AA1DJ,iBA4DS,GAAL;AACI,uBAAO,cAAc,OAAd,CAAsB,KAAtB,CAAP,CADJ;AA5DJ,iBA8DS,GAAL;AACI,uBAAO,aAAa,OAAb,CAAqB,KAArB,CAAP,CADJ;AA9DJ,iBAgES,GAAL,CAhEJ;AAiEI,iBAAK,GAAL;AACI,uBAAO,IAAI,MAAM,aAAN,CAAoB,GAAG,GAAH,EAAQ,UAAU,sBAAV,CAAiC,IAAjC,CAAhC,EAAwE,eAAe,KAAf,CAAxE,CAAP,CADJ;AAjEJ,iBAmES,GAAL;AACI,uBAAO,UAAU,KAAV,CAAP,CADJ;AAnEJ,iBAqES,GAAL;AACI,uBAAO,IAAI,YAAY,KAAZ,CAAkB,GAAG,GAAH,EAAQ,KAAK,IAAL,CAAU,CAAC,MAAM,OAAN,EAAD,EAAkB,MAAM,eAAe,KAAf,CAAN,CAA1D,CAAP,CADJ;AArEJ,iBAuES,GAAL;AACI,uBAAO,IAAI,YAAY,OAAZ,CAAoB,GAAG,GAAH,EAAQ,eAAe,KAAf,CAAhC,CAAP,CADJ;AAvEJ;AA0EQ,sBAAM,IAAI,KAAJ,CAAU,OAAO,GAAG,IAAH,CAAjB,CAAN,CADJ;AAzEJ,SAF4B;KAAhC;AA+EA,UAAM,oBAAoB,IAAI,GAAJ,CAAQ,CAC9B,EAD8B,EAC1B,EAD0B,EACtB,EADsB,EAClB,EADkB,EACd,GADc,EACT,GADS,EAE9B,GAF8B,EAEzB,GAFyB,EAEpB,GAFoB,EAEf,GAFe,EAEV,GAFU,EAG9B,GAH8B,EAGzB,GAHyB,EAGpB,GAHoB,EAGf,GAHe,EAI9B,GAJ8B,EAIzB,GAJyB,EAIpB,GAJoB,EAIf,GAJe,EAK9B,GAL8B,EAKzB,GALyB,EAKpB,GALoB,EAKf,GALe,EAKV,GALU,EAM9B,GAN8B,EAMzB,GANyB,EAMpB,GANoB,EAMf,GANe,EAMV,GANU,EAO9B,GAP8B,EAOzB,GAPyB,EAOpB,GAPoB,EAOf,GAPe,EAQ9B,GAR8B,EAQzB,GARyB,EAQpB,GARoB,EAQf,GARe,EAQV,GARU,EAS9B,GAT8B,EASzB,GATyB,EASpB,GAToB,EASf,GATe,EASV,GATU,EAU9B,GAV8B,EAUzB,GAVyB,EAUpB,GAVoB,EAUf,GAVe,EAUV,GAVU,CAAR,CAApB,CAjKqB;AA6K3B,aAAS,cAAT,CAAwB,CAAxB,EAA2B;AACvB,eAAO,UAAU,YAAV,CAAuB,iBAAvB,EAA0C,CAA1C,CAAP,CADuB;KAA3B;AAGA,aAAS,cAAT,CAAwB,MAAxB,EAAgC;AAC5B,iBAAS,aAAT,CAAuB,MAAvB,EAA+B,KAAK,EAAE,kBAAF,CAApC,CAD4B;AAE5B,cAAM,QAAQ,eAAe,MAAf,CAAR,CAFsB;AAG5B,YAAI,MAAM,MAAN,KAAiB,CAAjB,EAAoB;AACpB,gBAAI,OAAO,IAAP,cAAyB,QAAQ,gBAAR,IAA4B,EAAE,OAAO,IAAP,CAAY,KAAZ,aAA8B,MAAM,SAAN,CAAhC,EACrD,UAAU,IAAV,CAAe,OAAO,GAAP,EAAY,KAAK,EAAE,WAAF,CAAhC,CADJ;AAEA,mBAAO,OAAO,IAAP,CAAY,KAAZ,CAAP,CAHoB;SAAxB,MAMI,OAAO,IAAI,OAAO,OAAP,CAAe,OAAO,GAAP,EAAY,OAAO,IAAP,CAAY,KAAZ,CAA/B,EAAmD,OAAO,IAAP,CAAY,KAAZ,CAAnD,CAAP,CANJ;KAHJ;AAWA,aAAS,SAAT,CAAmB,MAAnB,EAA2B;+BACS,gBAAgB,MAAhB,EAAwB,CAAxB,EAA2B,KAAK,EAAE,QAAF,EADzC;;;;cAChB,4BADgB;cACV,8BADU;cACF,+BADE;;AAEvB,eAAO,IAAI,WAAW,IAAX,CAAgB,OAAO,GAAP,EAAY,IAAhC,EAAsC,MAAtC,EAA8C,OAA9C,CAAP,CAFuB;KAA3B;AAIA,aAAS,gBAAT,CAA0B,IAA1B,EAAgC,MAAhC,EAAwC;oCACV,aAAa,gBAAb,CAA8B,MAA9B,EADU;;;;cAC7B,mCAD6B;cACrB,oCADqB;;2BAER,KAAK,MAAL,CAAY,OAAZ,EAAqB,KAAK,CAAC,eAAe,MAAf,CAAD,EAAyB,aAAa,OAAb,CAAqB,CAArB,CAAzB,CAAL,EAAwD,MAAM,gBAAgB,MAAhB,EAAwB,CAAxB,EAA2B,KAAK,EAAE,eAAF,CAAkB,IAAlB,CAAL,CAAjC,EAFrE;;;;cAE7B,6BAF6B;cAElB,0BAFkB;;AAGpC,eAAO,IAAI,WAAW,WAAX,CAAuB,OAAO,GAAP,EAAY,SAAvC,EAAkD,MAAlD,EAA0D,SAAS,GAAT,CAAjE,CAHoC;KAAxC;AAKA,aAAS,SAAT,CAAmB,MAAnB,EAA2B;qCACC,aAAa,cAAb,CAA4B,MAA5B,EADD;;;;cAChB,mCADgB;cACR,kCADQ;;4BAEA,KAAK,MAAL,CAAY,OAAO,WAAP,CAAmB,KAAK,UAAU,SAAV,CAAoB,EAApB,EAAwB,CAAxB,CAAL,CAA/B,EAAiE,SAAuB;gBAApB,sBAAoB;gBAAZ,oBAAY;;AAC3G,sBAAU,KAAV,CAAgB,MAAM,IAAN,OAAiB,CAAjB,EAAoB,MAAM,GAAN,EAAW,KAAK,EAAE,OAAF,CAApD,CAD2G;AAE3G,mBAAO,CAAC,eAAe,MAAf,CAAD,EAAyB,qBAAqB,iBAArB,CAAuC,MAAM,IAAN,EAAvC,CAAzB,CAAP,CAF2G;SAAvB,EAGrF,MAAM,CAAC,eAAe,MAAf,CAAD,EAAyB,SAAS,YAAT,CAAsB,KAAtB,CAA4B,OAAO,GAAP,CAArD,CAAN,EALoB;;;;cAEhB,uBAFgB;cAEX,2BAFW;;AAMvB,eAAO,IAAI,OAAO,OAAP,CAAe,OAAO,GAAP,EAAY,OAA/B,EAAwC,GAAxC,EAA6C,aAAa,OAAb,CAAqB,KAArB,CAA7C,CAAP,CANuB;KAA3B;CApMD,CAPH","file":"private/parse/parseExpr.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', 'esast/lib/Loc', '../ast/Await', '../ast/booleans', '../ast/Call', '../ast/Class', '../ast/locals', '../ast/Val', '../ast/With', '../ast/YieldLike', '../context', '../token/Group', '../token/Keyword', '../util', './checks', './parseBlock', './parseClass', './parseCase', './parseDel', './parseExcept', './parseFor', './parseFunBlock', './parseMemberName', './parsePipe', './parsePoly', './parseSingle', './parseSwitch', './parseTrait', './parseLocalDeclares', './Slice'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const Loc_1 = require('esast/lib/Loc');\n    const Await_1 = require('../ast/Await');\n    const booleans_1 = require('../ast/booleans');\n    const Call_1 = require('../ast/Call');\n    const Class_1 = require('../ast/Class');\n    const locals_1 = require('../ast/locals');\n    const Val_1 = require('../ast/Val');\n    const With_1 = require('../ast/With');\n    const YieldLike_1 = require('../ast/YieldLike');\n    const context_1 = require('../context');\n    const Group_1 = require('../token/Group');\n    const Keyword_1 = require('../token/Keyword');\n    const util_1 = require('../util');\n    const checks_1 = require('./checks');\n    const parseBlock_1 = require('./parseBlock');\n    const parseClass_1 = require('./parseClass');\n    const parseCase_1 = require('./parseCase');\n    const parseDel_1 = require('./parseDel');\n    const parseExcept_1 = require('./parseExcept');\n    const parseFor_1 = require('./parseFor');\n    const parseFunBlock_1 = require('./parseFunBlock');\n    const parseMemberName_1 = require('./parseMemberName');\n    const parsePipe_1 = require('./parsePipe');\n    const parsePoly_1 = require('./parsePoly');\n    const parseSingle_1 = require('./parseSingle');\n    const parseSwitch_1 = require('./parseSwitch');\n    const parseTrait_1 = require('./parseTrait');\n    const parseLocalDeclares_1 = require('./parseLocalDeclares');\n    const Slice_1 = require('./Slice');\n    function parseExpr(tokens) {\n        return Op_1.caseOp(tokens.opSplitMany(_ => Keyword_1.isKeyword(139, _)), _ => parseObjSimple(tokens.loc, _), () => parseExprPlain(tokens));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseExpr;\n    function opParseExpr(tokens) {\n        return Op_1.opIf(!tokens.isEmpty(), () => parseExpr(tokens));\n    }\n    exports.opParseExpr = opParseExpr;\n    function parseExprParts(tokens) {\n        return Op_1.caseOp(tokens.opSplitOnce(isSplitKeyword), ({ before, at, after }) => util_1.cat(before.map(parseSingle_1.default), keywordExpr(at, after)), () => {\n            const last = tokens.last();\n            if (last instanceof Group_1.GroupParenthesis) {\n                const h = Slice_1.Tokens.of(last).head();\n                if (isSplitKeyword(h))\n                    context_1.warn(h.loc, _ => _.extraParens);\n            }\n            return tokens.map(parseSingle_1.default);\n        });\n    }\n    exports.parseExprParts = parseExprParts;\n    function parseNExprParts(tokens, n, message) {\n        const parts = parseExprParts(tokens);\n        context_1.check(parts.length === n, tokens.loc, message);\n        return parts;\n    }\n    exports.parseNExprParts = parseNExprParts;\n    function parseObjSimple(loc, splits) {\n        const first = splits[0].before;\n        checks_1.checkNonEmpty(first, _ => _.unexpected(splits[0].at));\n        const tokensCaller = first.rtail();\n        const pairs = [];\n        for (let i = 0; i < splits.length - 1; i = i + 1) {\n            const nameToken = splits[i].before.last();\n            const name = parseMemberName_1.default(nameToken);\n            const tokensValue = i === splits.length - 2 ?\n                splits[i + 1].before :\n                splits[i + 1].before.rtail();\n            const value = parseExprPlain(tokensValue);\n            const loc = new Loc_1.default(nameToken.loc.start, tokensValue.loc.end);\n            pairs.push(new Val_1.ObjPair(loc, name, value));\n        }\n        const val = new Val_1.ObjSimple(loc, pairs);\n        if (tokensCaller.isEmpty())\n            return val;\n        else {\n            const parts = parseExprParts(tokensCaller);\n            return new Call_1.default(loc, util_1.head(parts), util_1.cat(util_1.tail(parts), val));\n        }\n    }\n    function keywordExpr(at, after) {\n        const { kind } = at;\n        switch (kind) {\n            case 90:\n                return new Await_1.default(at.loc, parseExprPlain(after));\n            case 93:\n                return parseCase_1.default(after);\n            case 96:\n                return parseClass_1.default(after);\n            case 95:\n                return parseCond(after);\n            case 100:\n                return parseDel_1.default(after);\n            case 106:\n                return parseExcept_1.default(after);\n            case 111:\n                return parseFor_1.parseFor(after);\n            case 112:\n                return parseFor_1.parseForAsync(after);\n            case 113:\n                return parseFor_1.parseForBag(after);\n            case 115:\n            case 116:\n            case 117:\n            case 118:\n            case 119:\n            case 120:\n            case 121:\n            case 122:\n            case 123:\n            case 124:\n            case 125:\n            case 126:\n                return parseFunBlock_1.default(at.kind, after);\n            case 128:\n            case 174:\n                return parseConditional(at.kind, after);\n            case 137: {\n                const parts = parseExprParts(after);\n                return new Call_1.New(at.loc, util_1.head(parts), util_1.tail(parts));\n            }\n            case 141:\n            case 142:\n            case 143:\n            case 144:\n            case 145:\n            case 146:\n            case 147:\n            case 148:\n            case 149:\n            case 150:\n            case 151:\n            case 152:\n            case 153:\n            case 154:\n                return new Val_1.Operator(at.loc, Keyword_1.keywordKindToOperatorKind(kind), parseExprParts(after));\n            case 157:\n                return parsePipe_1.default(after);\n            case 158:\n                return parsePoly_1.default(after);\n            case 161:\n                return new Class_1.SuperCall(at.loc, parseExprParts(after));\n            case 163:\n                return parseSwitch_1.default(after);\n            case 167:\n                return parseTrait_1.default(after);\n            case 171:\n            case 172:\n                return new Val_1.UnaryOperator(at.loc, Keyword_1.keywordKindToUnaryKind(kind), parseExprPlain(after));\n            case 176:\n                return parseWith(after);\n            case 177:\n                return new YieldLike_1.Yield(at.loc, Op_1.opIf(!after.isEmpty(), () => parseExprPlain(after)));\n            case 178:\n                return new YieldLike_1.YieldTo(at.loc, parseExprPlain(after));\n            default:\n                throw new Error(String(at.kind));\n        }\n    }\n    const exprSplitKeywords = new Set([\n        90, 93, 96, 95, 100, 106,\n        111, 112, 113, 115, 116,\n        117, 118, 119, 120,\n        121, 122, 123, 124,\n        125, 126, 128, 137, 141,\n        142, 143, 144, 145, 146,\n        147, 148, 149, 150,\n        151, 152, 153, 154, 157,\n        158, 161, 163, 167, 171,\n        172, 174, 176, 177, 178\n    ]);\n    function isSplitKeyword(_) {\n        return Keyword_1.isAnyKeyword(exprSplitKeywords, _);\n    }\n    function parseExprPlain(tokens) {\n        checks_1.checkNonEmpty(tokens, _ => _.expectedExpression);\n        const parts = parseExprParts(tokens);\n        if (parts.length === 1) {\n            if (tokens.head() instanceof Group_1.GroupParenthesis && !(util_1.head(parts) instanceof Val_1.ObjSimple))\n                context_1.warn(tokens.loc, _ => _.extraParens);\n            return util_1.head(parts);\n        }\n        else\n            return new Call_1.default(tokens.loc, util_1.head(parts), util_1.tail(parts));\n    }\n    function parseCond(tokens) {\n        const [cond, ifTrue, ifFalse] = parseNExprParts(tokens, 3, _ => _.argsCond);\n        return new booleans_1.Cond(tokens.loc, cond, ifTrue, ifFalse);\n    }\n    function parseConditional(kind, tokens) {\n        const [before, opBlock] = parseBlock_1.beforeAndOpBlock(tokens);\n        const [condition, result] = Op_1.caseOp(opBlock, _ => [parseExprPlain(before), parseBlock_1.default(_)], () => parseNExprParts(before, 2, _ => _.argsConditional(kind)));\n        return new booleans_1.Conditional(tokens.loc, condition, result, kind === 174);\n    }\n    function parseWith(tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        const [val, declare] = Op_1.caseOp(before.opSplitOnce(_ => Keyword_1.isKeyword(86, _)), ({ before, after }) => {\n            context_1.check(after.size() === 1, after.loc, _ => _.asToken);\n            return [parseExprPlain(before), parseLocalDeclares_1.parseLocalDeclare(after.head())];\n        }, () => [parseExprPlain(before), locals_1.LocalDeclare.focus(tokens.loc)]);\n        return new With_1.default(tokens.loc, declare, val, parseBlock_1.default(block));\n    }\n});\n"],"sourceRoot":"/source/"}