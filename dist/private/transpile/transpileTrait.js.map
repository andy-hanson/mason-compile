{"version":3,"sources":["private/transpile/transpileTrait.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,mBAAmB,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;KACpI;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACrC,QAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5B,QAAI,eAAe,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACjD,QAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACrC,QAAI,iBAAiB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACrD,QAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,aAAS,SAAS,GAAG;AACjB,cAAM,IAAI,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACzE,cAAM,MAAM,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1E,cAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AACjG,eAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,eAAe,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,KAAK,CAAC,CAAC;KAC7K;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,SAAS,CAAC;AAC5B,aAAS,gBAAgB,GAAG;AACxB,eAAO,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;KAC3I;AACD,WAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAC5C,aAAS,OAAO,CAAC,CAAC,EAAE;AAChB,eAAO,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,yBAAyB,CAAC,CAAC,CAAC;KACzF;CACJ,CAAC,CAAC","file":"private/transpile/transpileTrait.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/ast', 'op/Op', './ast-constants', './context', './transpileMethod', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var ast_1 = require('esast/lib/ast');\n    var Op_1 = require('op/Op');\n    var ast_constants_1 = require('./ast-constants');\n    var context_1 = require('./context');\n    var transpileMethod_1 = require('./transpileMethod');\n    var util_1 = require('./util');\n    function default_1() {\n        const name = new ast_1.LiteralString(context_1.verifyResults.name(this));\n        const supers = new ast_1.ArrayExpression(this.superTraits.map(util_1.t0));\n        const trait = util_1.msCall('trait', name, supers, methods(this.statics), methods(this.methods));\n        return Op_1.caseOp(this.opDo, _ => util_1.blockWrap(util_1.t3(_.block, util_1.plainLet(ast_constants_1.IdFocus, trait), null, ast_constants_1.ReturnFocus)), () => trait);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = default_1;\n    function transpileTraitDo() {\n        return util_1.msCall('traitWithDefs', util_1.t0(this.implementor), util_1.t0(this.trait), methods(this.statics), methods(this.methods));\n    }\n    exports.transpileTraitDo = transpileTraitDo;\n    function methods(_) {\n        return new ast_1.ObjectExpression(_.map(transpileMethod_1.transpileMethodToProperty));\n    }\n});\n"],"sourceRoot":"/source/"}