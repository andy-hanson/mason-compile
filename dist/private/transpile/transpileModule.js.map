{"version":3,"sources":["private/transpile/transpileModule.js"],"names":[],"mappings":"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","file":"private/transpile/transpileModule.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/ast', 'esast-create-util/lib/util', 'op/Op', '../context', '../manglePath', '../MsAst', '../util', './ast-constants', './context', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var ast_1 = require('esast/lib/ast');\n    var util_1 = require('esast-create-util/lib/util');\n    var Op_1 = require('op/Op');\n    var context_1 = require('../context');\n    var manglePath_1 = require('../manglePath');\n    var MsAst_1 = require('../MsAst');\n    var util_2 = require('../util');\n    var ast_constants_1 = require('./ast-constants');\n    var context_2 = require('./context');\n    var util_3 = require('./util');\n    function default_1() {\n        const body = moduleBody(context_2.verifyResults.moduleKind, this.lines);\n        const imports = this.imports.filter((_) => _.path !== 'global');\n        for (const [path, imported] of context_2.verifyResults.builtinPathToNames)\n            if (path !== 'global') {\n                const importedDeclares = [];\n                let opImportDefault = null;\n                const defaultName = util_2.last(path.split('/'));\n                for (const name of imported) {\n                    const declare = MsAst_1.LocalDeclare.plain(this.loc, name);\n                    if (name === defaultName)\n                        opImportDefault = declare;\n                    else\n                        importedDeclares.push(declare);\n                }\n                imports.push(new MsAst_1.Import(this.loc, path, importedDeclares, opImportDefault));\n            }\n        const amd = amdWrapModule(this.doImports, imports, body);\n        return new ast_1.Script(util_2.cat(Op_1.opIf(context_1.options.useStrict, () => UseStrict), Op_1.opIf(context_1.options.includeAmdefine, () => AmdefineHeader), util_1.toLineContent(amd)));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = default_1;\n    function moduleBody(kind, lines) {\n        switch (kind) {\n            case 0:\n            case 2:\n                return util_3.tLines(lines);\n            case 1: {\n                const a = util_3.tLines(util_2.rtail(lines));\n                const b = util_3.t0(util_2.last(lines));\n                return util_2.cat(a, exportDefault(b));\n            }\n            case 3:\n            case 4: {\n                const declare = kind === 3 ? ast_constants_1.DeclareBuiltBag : ast_constants_1.DeclareBuiltMap;\n                return util_2.cat(declare, util_3.tLines(lines), exportDefault(ast_constants_1.IdBuilt));\n            }\n            default:\n                throw new Error(String(context_2.verifyResults.moduleKind));\n        }\n    }\n    function exportNamedOrDefault(val, name) {\n        return name === context_1.pathOptions.moduleName ?\n            exportDefault(val) :\n            exportNamed(val, name);\n    }\n    exports.exportNamedOrDefault = exportNamedOrDefault;\n    function exportNamed(val, name) {\n        return new ast_1.AssignmentExpression('=', util_1.member(ast_constants_1.IdExports, name), val);\n    }\n    function exportDefault(val) {\n        return new ast_1.AssignmentExpression('=', ExportsDefault, val);\n    }\n    function amdWrapModule(doImports, imports, body) {\n        const shouldImportBoot = context_1.options.importBoot;\n        const allImports = doImports.concat(imports);\n        const allImportPaths = allImports.map(_ => manglePath_1.default(_.path));\n        const arrImportPaths = new ast_1.ArrayExpression(util_2.cat(LitStrExports, Op_1.opIf(shouldImportBoot, () => new ast_1.LiteralString(context_1.options.bootPath)), allImportPaths.map(_ => new ast_1.LiteralString(_))));\n        const importToIdentifier = new Map();\n        const importIdentifiers = [];\n        for (let i = 0; i < allImports.length; i = i + 1) {\n            const _ = allImports[i];\n            const id = util_1.identifier(`${pathBaseName(_.path)}_${i}`);\n            importIdentifiers.push(id);\n            importToIdentifier.set(_, id);\n        }\n        function getIdentifier(_) {\n            return importToIdentifier.get(_);\n        }\n        const importArgs = util_2.cat(ast_constants_1.IdExports, Op_1.opIf(shouldImportBoot, () => IdBoot), importIdentifiers);\n        const doBoot = Op_1.opIf(shouldImportBoot, () => new ast_1.ExpressionStatement(util_3.msCall('getModule', IdBoot)));\n        const importDos = doImports.map(_ => util_1.loc(new ast_1.ExpressionStatement(util_3.msCall('getModule', getIdentifier(_))), _.loc));\n        const opDeclareImportedLocals = Op_1.opIf(!util_2.isEmpty(imports), () => new ast_1.VariableDeclaration('let', util_2.flatMap(imports, _ => importDeclarators(_, getIdentifier(_)))));\n        const fullBody = new ast_1.BlockStatement(util_2.cat(doBoot, importDos, opDeclareImportedLocals, body, ReturnExports));\n        const lazyBody = context_1.options.lazyModules ?\n            new ast_1.BlockStatement([new ast_1.ExpressionStatement(new ast_1.AssignmentExpression('=', ExportsGet, util_3.msCall('lazy', new ast_1.ArrowFunctionExpression([], fullBody))))]) :\n            fullBody;\n        return new ast_1.CallExpression(IdDefine, [arrImportPaths, new ast_1.ArrowFunctionExpression(importArgs, lazyBody)]);\n    }\n    function pathBaseName(path) {\n        return path.substr(path.lastIndexOf('/') + 1);\n    }\n    function importDeclarators({ imported, opImportDefault }, moduleIdentifier) {\n        const isLazy = (util_2.isEmpty(imported) ? opImportDefault : imported[0]).isLazy;\n        const value = util_3.msCall(isLazy ? 'lazyGetModule' : 'getModule', moduleIdentifier);\n        const importedDefault = Op_1.opMap(opImportDefault, def => {\n            const defexp = util_3.msCall('getDefaultExport', moduleIdentifier);\n            const val = isLazy ? util_3.lazyWrap(defexp) : defexp;\n            return util_1.loc(new ast_1.VariableDeclarator(util_3.idForDeclareCached(def), val), def.loc);\n        });\n        const importedDestruct = util_2.isEmpty(imported) ? null :\n            util_3.makeDestructureDeclarators(imported, isLazy, value, true);\n        return util_2.cat(importedDefault, importedDestruct);\n    }\n    const IdBoot = new ast_1.Identifier('_boot');\n    const IdDefine = new ast_1.Identifier('define');\n    const ExportsGet = util_1.member(ast_constants_1.IdExports, '_get');\n    const LitStrExports = new ast_1.LiteralString('exports');\n    const ReturnExports = new ast_1.ReturnStatement(ast_constants_1.IdExports);\n    const UseStrict = new ast_1.ExpressionStatement(new ast_1.LiteralString('use strict'));\n    const AmdefineHeader = new ast_1.IfStatement(new ast_1.BinaryExpression('!==', new ast_1.UnaryExpression('typeof', IdDefine), new ast_1.LiteralString('function')), new ast_1.VariableDeclaration('var', [\n        new ast_1.VariableDeclarator(IdDefine, new ast_1.CallExpression(new ast_1.CallExpression(new ast_1.Identifier('require'), [new ast_1.LiteralString('amdefine')]), [new ast_1.Identifier('module')]))]));\n    const ExportsDefault = util_1.member(ast_constants_1.IdExports, 'default');\n});\n"],"sourceRoot":"/source/"}