{"version":3,"sources":["private/transpile/transpileExcept.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;KAC1F;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5B,QAAI,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACrC,QAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAChC,QAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,aAAS,SAAS,GAAG;AACjB,cAAM,KAAK,GAAG,IAAI,CAAC,MAAM,KAAK,IAAI,GAC9B,IAAI,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,GAC/I,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,eAAO,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC7C;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,SAAS,CAAC;AAC5B,aAAS,cAAc,CAAC,iBAAiB,EAAE;AACvC,YAAI,iBAAiB,EAAE;AACnB,kBAAM,YAAY,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC,KAAK,EAAE,CACtD,IAAI,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACpE,mBAAO,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;SAC9C,MAEG,OAAO,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpC;AACD,WAAO,CAAC,cAAc,GAAG,cAAc,CAAC;AACxC,aAAS,iBAAiB,CAAC,CAAC,EAAE,KAAK,EAAE;AACjC,cAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;AACrF,cAAM,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACpE,eAAO,CAAC,aAAa,EAAE,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACpG;AACD,aAAS,gBAAgB,CAAC,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE;AACzD,cAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACxD,cAAM,iBAAiB,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1E,cAAM,OAAO,GAAG,iBAAiB,GAAG,OAAO,GAAG,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAC9F,cAAM,aAAa,GAAG,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;AACnG,cAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,iBAAiB,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;AACxH,YAAI,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;AAC9B,gBAAI,OAAO,EACP,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AAC3C,mBAAO,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SACnD,MACI;AACD,gBAAI,OAAO,GAAG,QAAQ,CAAC;AACvB,iBAAK,MAAM,UAAU,IAAI,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;AACvD,sBAAM,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC;AACtC,sBAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;AACjE,sBAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;AACtD,uBAAO,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;aACxD;AACD,mBAAO,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,cAAc,CAAC,OAAO,GAAG,CAAC,aAAa,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACrH;KACJ;AACD,UAAM,OAAO,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC;UAAE,YAAY,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC;UAAE,aAAa,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC,KAAK,EAAE,CACrJ,IAAI,KAAK,CAAC,kBAAkB,CAAC,YAAY,EAAE,IAAI,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;UAAE,aAAa,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;CACxL,CAAC,CAAC","file":"private/transpile/transpileExcept.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', 'esast/lib/ast', '../util', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var ast_1 = require('esast/lib/ast');\n    var util_1 = require('../util');\n    var util_2 = require('./util');\n    function default_1() {\n        const block = this.opElse === null ?\n            new ast_1.TryStatement(util_2.t0(this.try), transpileCatches(this.typedCatches, this.opCatchAll, false), Op_1.opMap(this.opFinally, util_2.t0)) :\n            transpileWithElse(this, this.opElse);\n        return util_2.blockWrapIfVal(this, block);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = default_1;\n    function transpileCatch(needsErrorDeclare) {\n        if (needsErrorDeclare) {\n            const declareError = new ast_1.VariableDeclaration('let', [\n                new ast_1.VariableDeclarator(util_2.t0(this.caught), IdError)]);\n            return util_2.t1(this.block, declareError);\n        }\n        else\n            return util_2.t0(this.block);\n    }\n    exports.transpileCatch = transpileCatch;\n    function transpileWithElse(_, _else) {\n        const _try = util_2.t1(_else, util_1.cat(util_2.tLines(_.try.lines), SetExceptElse));\n        const _catch = transpileCatches(_.typedCatches, _.opCatchAll, true);\n        return [LetExceptElse, new ast_1.TryStatement(_try, _catch, Op_1.opMap(_.opFinally, util_2.t0))];\n    }\n    function transpileCatches(typedCatches, opCatchAll, hasElse) {\n        const allCatches = util_1.cat(typedCatches, opCatchAll);\n        const needsErrorDeclare = !util_1.allSame(allCatches, _ => _.caught.name);\n        const idError = needsErrorDeclare ? IdError : util_2.idForDeclareCached(allCatches[0].caught);\n        const throwIfOnElse = () => new ast_1.IfStatement(IdExceptElse, new ast_1.ThrowStatement(idError));\n        const catchAll = Op_1.caseOp(opCatchAll, _ => util_2.t1(_, needsErrorDeclare), () => new ast_1.ThrowStatement(idError));\n        if (util_1.isEmpty(typedCatches)) {\n            if (hasElse)\n                catchAll.body.unshift(throwIfOnElse());\n            return new ast_1.CatchClause(idError, catchAll);\n        }\n        else {\n            let catches = catchAll;\n            for (const typedCatch of util_1.reverseIter(typedCatches)) {\n                const type = typedCatch.caught.opType;\n                const cond = util_2.msCall('contains', util_2.t0(type), idError);\n                const then = util_2.t1(typedCatch, needsErrorDeclare);\n                catches = new ast_1.IfStatement(cond, then, catches);\n            }\n            return new ast_1.CatchClause(idError, new ast_1.BlockStatement(hasElse ? [throwIfOnElse(), catches] : [catches]));\n        }\n    }\n    const IdError = new ast_1.Identifier('error_'), IdExceptElse = new ast_1.Identifier('exceptElse_'), LetExceptElse = new ast_1.VariableDeclaration('let', [\n        new ast_1.VariableDeclarator(IdExceptElse, new ast_1.LiteralBoolean(false))]), SetExceptElse = new ast_1.AssignmentExpression('=', IdExceptElse, new ast_1.LiteralBoolean(true));\n});\n"],"sourceRoot":"/source/"}