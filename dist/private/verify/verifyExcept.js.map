{"version":3,"sources":["private/verify/verifyExcept.js"],"names":[],"mappings":"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","file":"private/verify/verifyExcept.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../context', '../util', './locals', './SK', './util', './verifyBlock'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var context_1 = require('../context');\n    var util_1 = require('../util');\n    var locals_1 = require('./locals');\n    var SK_1 = require('./SK');\n    var util_2 = require('./util');\n    var verifyBlock_1 = require('./verifyBlock');\n    function verifyExcept(_, sk) {\n        const { loc, try: _try, typedCatches, opCatchAll, allCatches, opElse, opFinally } = _;\n        SK_1.markStatement(_, sk);\n        Op_1.caseOp(opElse, _ => {\n            locals_1.plusLocals(verifyBlock_1.verifyBlockDo(_try), () => verifyBlock_1.verifyBlockSK(_, sk));\n            if (util_1.isEmpty(allCatches))\n                context_1.warn(loc, _ => _.elseRequiresCatch);\n        }, () => verifyBlock_1.verifyBlockSK(_try, sk));\n        if (util_1.isEmpty(allCatches) && opFinally === null)\n            context_1.warn(loc, _ => _.uselessExcept);\n        for (const _ of typedCatches)\n            verifyCatch(_, sk);\n        Op_1.opEach(opCatchAll, _ => verifyCatch(_, sk));\n        Op_1.opEach(opFinally, verifyBlock_1.verifyBlockDo);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = verifyExcept;\n    function verifyCatch({ caught, block }, sk) {\n        util_2.makeUseOptionalIfFocus(caught);\n        util_2.verifyNotLazy(caught, _ => _.noLazyCatch);\n        locals_1.verifyAndPlusLocal(caught, () => {\n            verifyBlock_1.verifyBlockSK(block, sk);\n        });\n    }\n});\n"],"sourceRoot":"/source/"}