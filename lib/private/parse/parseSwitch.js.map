{"version":3,"sources":["private/parse/parseSwitch.js"],"names":[],"mappings":";;AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,YAAvB,EAAqC,eAArC,EAAsD,eAAtD,EAAuE,kBAAvE,EAA2F,UAA3F,EAAuG,cAAvG,EAAuH,aAAvH,CAAP,EAA8I,OAA9I,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,QAAI,YAAY,QAAQ,YAAR,CAAZ,CAFuB;AAG3B,QAAI,WAAW,QAAQ,eAAR,CAAX,CAHuB;AAI3B,QAAI,WAAW,QAAQ,eAAR,CAAX,CAJuB;AAK3B,QAAI,YAAY,QAAQ,kBAAR,CAAZ,CALuB;AAM3B,QAAI,WAAW,QAAQ,UAAR,CAAX,CANuB;AAO3B,QAAI,eAAe,QAAQ,cAAR,CAAf,CAPuB;AAQ3B,QAAI,cAAc,QAAQ,aAAR,CAAd,CARuB;AAS3B,aAAS,WAAT,CAAqB,eAArB,EAAsC,MAAtC,EAA8C;oCAClB,aAAa,cAAb,CAA4B,MAA5B,EADkB;;;;cACnC,mCADmC;cAC3B,kCAD2B;;AAE1C,YAAI,eAAJ,EACI,SAAS,UAAT,CAAoB,MAApB,EAA4B,KAAK,EAAE,mBAAF,CAAjC,CADJ;AAEA,cAAM,WAAW,kBAAkB,SAAS,WAAT,CAAqB,KAArB,CAA2B,OAAO,GAAP,CAA7C,GAA2D,YAAY,OAAZ,CAAoB,MAApB,CAA3D,CAJyB;AAK1C,cAAM,WAAW,MAAM,SAAN,EAAX,CALoC;;mBAMd,UAAU,SAAV,CAAoB,EAApB,EAAwB,SAAS,IAAT,EAAxB,IACxB,CAAC,MAAM,KAAN,EAAD,EAAgB,aAAa,cAAb,CAA4B,EAA5B,EAAgC,SAAS,IAAT,EAAhC,CAAhB,CADwB,GAExB,CAAC,KAAD,EAAQ,IAAR,CAFwB,CANc;;;;cAMnC,qBANmC;cAMxB,kBANwB;;AAS1C,cAAM,QAAQ,UAAU,SAAV,CAAoB,QAAQ;yCACd,aAAa,cAAb,CAA4B,IAA5B,EADc;;;;kBAC/B,mCAD+B;kBACvB,kCADuB;;AAEtC,mBAAO,IAAI,SAAS,UAAT,CAAoB,KAAK,GAAL,EAAU,YAAY,cAAZ,CAA2B,MAA3B,CAAlC,EAAsE,aAAa,OAAb,CAAqB,KAArB,CAAtE,CAAP,CAFsC;SAAR,CAA5B,CAToC;AAa1C,kBAAU,KAAV,CAAgB,MAAM,MAAN,GAAe,CAAf,EAAkB,OAAO,GAAP,EAAY,KAAK,EAAE,oBAAF,CAAnD,CAb0C;AAc1C,eAAO,IAAI,SAAS,OAAT,CAAiB,OAAO,GAAP,EAAY,QAAjC,EAA2C,KAA3C,EAAkD,MAAlD,CAAP,CAd0C;KAA9C;AAgBA,WAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C,EAzB2B;AA0B3B,YAAQ,OAAR,GAAkB,WAAlB,CA1B2B;CAA5B,CAPH","file":"private/parse/parseSwitch.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../context', '../ast/locals', '../ast/Switch', '../token/Keyword', './checks', './parseBlock', './parseExpr'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var context_1 = require('../context');\n    var locals_1 = require('../ast/locals');\n    var Switch_1 = require('../ast/Switch');\n    var Keyword_1 = require('../token/Keyword');\n    var checks_1 = require('./checks');\n    var parseBlock_1 = require('./parseBlock');\n    var parseExpr_1 = require('./parseExpr');\n    function parseSwitch(switchedFromFun, tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        if (switchedFromFun)\n            checks_1.checkEmpty(before, _ => _.switchArgIsImplicit);\n        const switched = switchedFromFun ? locals_1.LocalAccess.focus(tokens.loc) : parseExpr_1.default(before);\n        const lastLine = block.lastSlice();\n        const [partLines, opElse] = Keyword_1.isKeyword(98, lastLine.head()) ?\n            [block.rtail(), parseBlock_1.parseJustBlock(98, lastLine.tail())] :\n            [block, null];\n        const parts = partLines.mapSlices(line => {\n            const [before, block] = parseBlock_1.beforeAndBlock(line);\n            return new Switch_1.SwitchPart(line.loc, parseExpr_1.parseExprParts(before), parseBlock_1.default(block));\n        });\n        context_1.check(parts.length > 0, tokens.loc, _ => _.caseSwitchNeedsParts);\n        return new Switch_1.default(tokens.loc, switched, parts, opElse);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseSwitch;\n});\n"],"sourceRoot":"/source/"}