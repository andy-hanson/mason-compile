{"version":3,"sources":["private/parse/parseCase.js"],"names":[],"mappings":";;AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,sBAAsB,EAAE,eAAe,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC;KACtL;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5B,QAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtC,QAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,QAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,QAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,QAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,QAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,QAAI,oBAAoB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC3D,QAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,QAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,aAAS,SAAS,CAAC,YAAY,EAAE,MAAM,EAAE;oCACb,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC;;;;cAApD,MAAM;cAAE,KAAK;;AACpB,YAAI,OAAO,CAAC;AACZ,YAAI,YAAY,EAAE;AACd,oBAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,mBAAmB,CAAC,CAAC;AACxD,mBAAO,GAAG,IAAI,CAAC;SAClB,MAEG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACjG,cAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;;mBACrB,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,GAC9D,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,YAAY,CAAC,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,GACjE,CAAC,KAAK,EAAE,IAAI,CAAC;;;;cAFV,SAAS;cAAE,MAAM;;AAGxB,cAAM,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,IAAI;yCACd,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC;;;;kBAAlD,MAAM;kBAAE,KAAK;;AACpB,mBAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SAC7F,CAAC,CAAC;AACH,iBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,CAAC;AAC3E,eAAO,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KAC/D;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,SAAS,CAAC;AAC5B,aAAS,aAAa,CAAC,MAAM,EAAE;AAC3B,cAAM,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AAC5B,YAAI,KAAK,YAAY,OAAO,CAAC,UAAU,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;AAC1D,kBAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACpC,gBAAI,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE;AAClC,sBAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;AAC9C,sBAAM,MAAM,GAAG,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3D,uBAAO,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;aACxD;SACJ;AACD,eAAO,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KACpC;CACJ,CAAC,CAAC","file":"private/parse/parseCase.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../context', '../MsAst', '../Token', './checks', './parse*', './parseBlock', './parseLocalDeclares', './parseSpaced', './Slice'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var context_1 = require('../context');\n    var MsAst_1 = require('../MsAst');\n    var Token_1 = require('../Token');\n    var checks_1 = require('./checks');\n    var parse_1 = require('./parse*');\n    var parseBlock_1 = require('./parseBlock');\n    var parseLocalDeclares_1 = require('./parseLocalDeclares');\n    var parseSpaced_1 = require('./parseSpaced');\n    var Slice_1 = require('./Slice');\n    function parseCase(casedFromFun, tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        let opCased;\n        if (casedFromFun) {\n            checks_1.checkEmpty(before, _ => _.caseFocusIsImplicit);\n            opCased = null;\n        }\n        else\n            opCased = Op_1.opMap(parse_1.opParseExpr(before), _ => MsAst_1.AssignSingle.focus(_.loc, _));\n        const lastLine = Slice_1.Tokens.of(block.last());\n        const [partLines, opElse] = Token_1.isKeyword(55, lastLine.head()) ?\n            [block.rtail(), parseBlock_1.parseJustBlock(55, lastLine.tail())] :\n            [block, null];\n        const parts = partLines.mapSlices(line => {\n            const [before, block] = parseBlock_1.beforeAndBlock(line);\n            return new MsAst_1.CasePart(line.loc, parseCaseTest(before), parseBlock_1.default(block));\n        });\n        context_1.check(parts.length > 0, tokens.loc, _ => _.caseSwitchNeedsParts);\n        return new MsAst_1.Case(tokens.loc, opCased, parts, opElse);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseCase;\n    function parseCaseTest(tokens) {\n        const first = tokens.head();\n        if (first instanceof Token_1.GroupSpace && tokens.size() > 1) {\n            const ft = Slice_1.Tokens.of(first);\n            if (Token_1.isKeyword(47, ft.head())) {\n                const type = parseSpaced_1.default(ft.tail());\n                const locals = parseLocalDeclares_1.default(tokens.tail());\n                return new MsAst_1.Pattern(tokens.loc, type, locals);\n            }\n        }\n        return parse_1.parseExpr(tokens);\n    }\n});\n"],"sourceRoot":"/source/"}