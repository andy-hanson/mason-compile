{"version":3,"sources":["private/parse/parseMethodImpls.js"],"names":[],"mappings":"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","file":"private/parse/parseMethodImpls.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../ast/classTraitCommon', '../ast/Val', '../context', '../token/Keyword', './parseBlock', './parseExpr', './parseFun', './parseMethodSplit'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var classTraitCommon_1 = require('../ast/classTraitCommon');\n    var Val_1 = require('../ast/Val');\n    var context_1 = require('../context');\n    var Keyword_1 = require('../token/Keyword');\n    var parseBlock_1 = require('./parseBlock');\n    var parseExpr_1 = require('./parseExpr');\n    var parseFun_1 = require('./parseFun');\n    var parseMethodSplit_1 = require('./parseMethodSplit');\n    function parseMethodImpls(lines) {\n        return lines.mapSlices(parseMethodImpl);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseMethodImpls;\n    function takeStatics(lines) {\n        if (lines.isEmpty())\n            return [[], lines];\n        else {\n            const line = lines.headSlice();\n            return Keyword_1.isKeyword(143, line.head()) ?\n                [parseMethodImpls(parseBlock_1.justBlock(143, line.tail())), lines.tail()] :\n                [[], lines];\n        }\n    }\n    exports.takeStatics = takeStatics;\n    function parseStaticsAndMethods(lines) {\n        const [statics, rest] = takeStatics(lines);\n        return [statics, parseMethodImpls(rest)];\n    }\n    exports.parseStaticsAndMethods = parseStaticsAndMethods;\n    function opTakeDo(lines) {\n        const line = lines.headSlice();\n        return Keyword_1.isKeyword(93, line.head()) ?\n            [new classTraitCommon_1.ClassTraitDo(line.loc, parseBlock_1.parseJustBlock(93, line.tail())), lines.tail()] :\n            [null, lines];\n    }\n    exports.opTakeDo = opTakeDo;\n    function parseMethodImpl(tokens) {\n        const [[isMy, isVirtual, isOverride], rest] = tokens.takeKeywords(129, 154, 136);\n        const kind = methodKind(tokens.loc, isMy, isVirtual, isOverride);\n        const head = rest.head();\n        if (isGetSet(head)) {\n            const [before, block] = parseBlock_1.beforeAndBlock(rest.tail());\n            const ctr = head.kind === 119 ? classTraitCommon_1.MethodGetter : classTraitCommon_1.MethodSetter;\n            return new ctr(rest.loc, parseExprOrQuoteSimple(before), parseBlock_1.default(block), kind);\n        }\n        else {\n            const { before, kind: funKind, after } = parseMethodSplit_1.default(rest);\n            const fun = parseFun_1.default(funKind, after);\n            return new classTraitCommon_1.MethodImpl(rest.loc, parseExprOrQuoteSimple(before), fun, kind);\n        }\n    }\n    function methodKind(loc, isMy, isVirtual, isOverride) {\n        context_1.check(!(isMy && isOverride), loc, _ => _.noMyOverride);\n        const m = isMy ? 0b100 : 0;\n        const v = isVirtual ? 0b010 : 0;\n        const o = isOverride ? 0b001 : 0;\n        return m | v | o;\n    }\n    function isGetSet(token) {\n        if (token instanceof Keyword_1.default)\n            return token.kind === 119 || token.kind === 141;\n        else\n            return null;\n    }\n    function parseExprOrQuoteSimple(tokens) {\n        const expr = parseExpr_1.default(tokens);\n        return expr instanceof Val_1.QuoteSimple ? expr.value : expr;\n    }\n});\n"],"sourceRoot":"/source/"}