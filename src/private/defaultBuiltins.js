export default {
	global: [
		'Array',
		'Boolean',
		'Error',
		'Function',
		'Math',
		'Number',
		'Object',
		'RegExp',
		'String',
		'Symbol'
	],
	'msl.@.?': [
		'_',
		'?None',
		'Opt->?',
		'?->Opt',
		'?-or',
		'?some',
		'un-?'
	],
	'msl.@.@': [
		'_',
		'++',
		'++~',
		'+!',
		'++!',
		'--',
		'--~',
		'-!',
		'--!',
		'all?',
		'any?',
		'count',
		'empty?',
		'empty!',
		'?find',
		'fold',
		'@flat-map',
		'@flat-map~',
		'@flatten',
		'@flatten~',
		'iterator',
		'@keep',
		'@keep~',
		'@map',
		'@map~',
	],
	'msl.@.@-Type': ['empty'],
	'msl.@.Map.Id-Map': ['_'],
	'msl.@.Map.Hash-Map': ['_'],
	'msl.@.Map.Map': [
		'_',
		'?get',
		'@keys',
		'make-map',
		'map=?',
		'@values'
	],
	'msl.@.Range': ['_'],
	'msl.@.Seq.Seq': [
		'_',
		'@drop',
		'@drop~',
		'@drop-while',
		'@drop-while~',
		'first',
		'?first',
		'@indexes',
		'last',
		'?last',
		'?nth',
		'@reverse',
		'@reverse~',
		'@rtail',
		'@slice',
		'@slice~',
		'@split',
		'@split~',
		'seq=?',
		'@tail',
		'@take',
		'@take~',
		'@take-while',
		'@take-while~',
		'@zip',
		'@zip~'
	],
	'msl.@.Seq.Stream': ['_'],
	'msl.@.Set.Id-Set': ['_'],
	'msl.@.Set.Set': ['_', 'set=?'],
	'msl.$': ['_'],
	'msl.compare': [
		'=?',
		'<?',
		'<=?',
		'>?',
		'>=?',
		'?min',
		'min',
		'?min-by',
		'min-by',
		'?max',
		'max',
		'?max-by',
		'max-by',
		'same?'
	],
	'msl.Function': ['identity'],
	'msl.Generator': ['gen-next!'],
	'msl.js': ['defined?', 'id=?'],
	'msl.math.methods': ['+', '-', '*', '/'],
	'msl.math.Number': [
		'divisible?',
		'Int',
		'int/',
		'modulo',
		'Nat',
		'neg',
		'log',
		'remainder'
	],
	'msl.math.util': ['average', 'sum'],
	'msl.methods': ['sub', 'set-sub!', 'del-sub!'],
	'msl.to-string': ['_', 'inspect'],
	'msl.Type.Method': ['_', 'impl!', 'impl-for', 'self-impl!'],
	'msl.Type.Kind': ['_', 'kind!', 'self-kind!'],
	'msl.Type.Pred-Type': ['_', 'Any', 'ObjLit'],
	'msl.Type.Type': ['_', '=>', 'contains?', 'extract']
}
