{"version":3,"sources":["private/parse/parseMethodSplit.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,YAAhC,EAA8C,kBAA9C,CAAP,EAA0E,OAA1E,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,UAAM,OAAO,QAAQ,OAAR,CAAP,CAFqB;AAG3B,UAAM,YAAY,QAAQ,YAAR,CAAZ,CAHqB;AAI3B,UAAM,YAAY,QAAQ,kBAAR,CAAZ,CAJqB;AAK3B,aAAS,gBAAT,CAA0B,MAA1B,EAAkC;AAC9B,eAAO,KAAK,MAAL,CAAY,OAAO,WAAP,CAAmB,UAAU,YAAV,CAA/B,EAAwD;gBAAG;gBAAQ;gBAAI;mBAAa,EAAE,QAAQ,MAAR,EAAgB,MAAM,cAAc,EAAd,CAAN,EAAyB,OAAO,KAAP;SAAvE,EAAwF,MAAM;AACzJ,kBAAM,UAAU,IAAV,CAAe,OAAO,GAAP,EAAY,KAAK,EAAE,mBAAF,CAAtC,CADyJ;SAAN,CAAvJ,CAD8B;KAAlC;AAKA,WAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C,EAV2B;AAW3B,YAAQ,OAAR,GAAkB,gBAAlB,CAX2B;AAY3B,aAAS,aAAT,CAAuB,YAAvB,EAAqC;AACjC,gBAAQ,aAAa,IAAb;AACJ,iBAAK,GAAL;AACI,uBAAO,GAAP,CADJ;AADJ,iBAGS,GAAL;AACI,uBAAO,GAAP,CADJ;AAHJ,iBAKS,GAAL;AACI,uBAAO,GAAP,CADJ;AALJ,iBAOS,GAAL;AACI,uBAAO,GAAP,CADJ;AAPJ,iBASS,GAAL;AACI,uBAAO,GAAP,CADJ;AATJ,iBAWS,GAAL;AACI,uBAAO,GAAP,CADJ;AAXJ;AAcQ,sBAAM,UAAU,IAAV,CAAe,aAAa,GAAb,EAAkB,KAAK,EAAE,mBAAF,CAA5C,CADJ;AAbJ,SADiC;KAArC;CAZD,CAPH","file":"private/parse/parseMethodSplit.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../context', '../token/Keyword'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const context_1 = require('../context');\n    const Keyword_1 = require('../token/Keyword');\n    function parseMethodSplit(tokens) {\n        return Op_1.caseOp(tokens.opSplitOnce(Keyword_1.isFunKeyword), ({ before, at, after }) => ({ before: before, kind: methodFunKind(at), after: after }), () => {\n            throw context_1.fail(tokens.loc, _ => _.expectedMethodSplit);\n        });\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseMethodSplit;\n    function methodFunKind(funKindToken) {\n        switch (funKindToken.kind) {\n            case 115:\n                return 117;\n            case 116:\n                return 118;\n            case 119:\n                return 121;\n            case 120:\n                return 122;\n            case 123:\n                return 125;\n            case 124:\n                return 126;\n            default:\n                throw context_1.fail(funKindToken.loc, _ => _.implicitFunctionDot);\n        }\n    }\n});\n"],"sourceRoot":"/source/"}