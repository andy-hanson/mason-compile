{"version":3,"sources":["private/parse/parseQuote.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,eAAe,EAAE,YAAY,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC;KACrJ;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACxC,QAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAClC,QAAI,SAAS,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC5C,QAAI,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACxC,QAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAChC,QAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACzC,QAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,aAAS,UAAU,CAAC,MAAM,EAAE;AACxB,eAAO,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;KAC/D;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,UAAU,CAAC;AAC7B,aAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;AAChC,eAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;KACpE;AACD,WAAO,CAAC,WAAW,GAAG,WAAW,CAAC;AAClC,aAAS,UAAU,CAAC,MAAM,EAAE;AACxB,eAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI;AACnB,gBAAI,CAAC,YAAY,OAAO,CAAC,WAAW,EAChC,OAAO,CAAC,CAAC,KAAK,CAAC,KACd,IAAI,CAAC,YAAY,OAAO,CAAC,SAAS,EACnC,OAAO,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAC9C,IAAI,CAAC,YAAY,SAAS,CAAC,OAAO,EAAE;AACrC,sBAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;AAC9B,uBAAO,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAC5C,MAEG,OAAO,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;SACxD,CAAC,CAAC;KACN;CACJ,CAAC,CAAC","file":"private/parse/parseQuote.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../ast/locals', '../ast/Val', '../token/Keyword', '../token/Token', '../util', './parseExpr', './Slice'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var locals_1 = require('../ast/locals');\n    var Val_1 = require('../ast/Val');\n    var Keyword_1 = require('../token/Keyword');\n    var Token_1 = require('../token/Token');\n    var util_1 = require('../util');\n    var parseExpr_1 = require('./parseExpr');\n    var Slice_1 = require('./Slice');\n    function parseQuote(tokens) {\n        return new Val_1.QuotePlain(tokens.loc, parseParts(tokens));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseQuote;\n    function parseRegExp(tokens, flags) {\n        return new Val_1.MsRegExp(tokens.loc, parseParts(tokens), flags);\n    }\n    exports.parseRegExp = parseRegExp;\n    function parseParts(tokens) {\n        return tokens.map(_ => {\n            if (_ instanceof Token_1.StringToken)\n                return _.value;\n            else if (_ instanceof Token_1.NameToken)\n                return new locals_1.LocalAccess(_.loc, _.name);\n            else if (_ instanceof Keyword_1.default) {\n                util_1.assert(_.kind === 102);\n                return locals_1.LocalAccess.focus(_.loc);\n            }\n            else\n                return parseExpr_1.default(Slice_1.Tokens.of(_));\n        });\n    }\n});\n"],"sourceRoot":"/source/"}