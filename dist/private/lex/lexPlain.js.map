{"version":3,"sources":["private/lex/lexPlain.js"],"names":[],"mappings":"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","file":"private/lex/lexPlain.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Loc', '../context', '../token/Group', '../token/Keyword', '../token/Token', '../util', './chars', './groupContext', './lexName', './lexQuote', './sourceContext'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Loc_1 = require('esast/lib/Loc');\n    var context_1 = require('../context');\n    var Group_1 = require('../token/Group');\n    var Keyword_1 = require('../token/Keyword');\n    var Token_1 = require('../token/Token');\n    var util_1 = require('../util');\n    var chars_1 = require('./chars');\n    var groupContext_1 = require('./groupContext');\n    var lexName_1 = require('./lexName');\n    var lexQuote_1 = require('./lexQuote');\n    var sourceContext_1 = require('./sourceContext');\n    function lexPlain(isInQuote) {\n        let indent = 0;\n        let startColumn;\n        function startPos() {\n            return new Loc_1.Pos(sourceContext_1.line, startColumn);\n        }\n        function loc() {\n            return new Loc_1.default(startPos(), sourceContext_1.pos());\n        }\n        function keyword(kind) {\n            groupContext_1.addToCurrentGroup(new Keyword_1.default(loc(), kind));\n        }\n        function funKeyword(kind) {\n            keyword(kind);\n            groupContext_1.space(loc());\n        }\n        function eatAndAddNumber() {\n            const startIndex = sourceContext_1.index - 1;\n            sourceContext_1.tryEat(45);\n            if (sourceContext_1.peek(-1) === 48) {\n                const p = sourceContext_1.peek();\n                switch (p) {\n                    case 66:\n                    case 79:\n                    case 88: {\n                        sourceContext_1.skip();\n                        const isDigitSpecial = p === 66 ?\n                            chars_1.isDigitBinary :\n                            p === 79 ?\n                                chars_1.isDigitOctal :\n                                chars_1.isDigitHex;\n                        sourceContext_1.skipWhile(isDigitSpecial);\n                        break;\n                    }\n                    case 46:\n                        if (chars_1.isDigit(sourceContext_1.peek(1))) {\n                            sourceContext_1.skip();\n                            sourceContext_1.skipWhile(chars_1.isDigit);\n                        }\n                        break;\n                    default:\n                }\n            }\n            else {\n                sourceContext_1.skipWhile(chars_1.isDigit);\n                if (sourceContext_1.peek() === 46 && chars_1.isDigit(sourceContext_1.peek(1))) {\n                    sourceContext_1.skip();\n                    sourceContext_1.skipWhile(chars_1.isDigit);\n                }\n            }\n            const str = sourceContext_1.sourceString.slice(startIndex, sourceContext_1.index);\n            groupContext_1.addToCurrentGroup(new Token_1.NumberToken(loc(), str));\n        }\n        function eatIndent() {\n            const optIndent = context_1.options.indent;\n            if (typeof optIndent === 'number') {\n                const spaces = sourceContext_1.skipWhileEquals(32);\n                context_1.check(spaces % optIndent === 0, sourceContext_1.pos, _ => _.badSpacedIndent(optIndent));\n                return spaces / optIndent;\n            }\n            else {\n                const indent = sourceContext_1.skipWhileEquals(9);\n                context_1.check(sourceContext_1.peek() !== 32, sourceContext_1.pos, _ => _.noLeadingSpace);\n                return indent;\n            }\n        }\n        function handleName() {\n            lexName_1.default(startPos(), false);\n        }\n        loop: for (;;) {\n            startColumn = sourceContext_1.column;\n            const characterEaten = sourceContext_1.eat();\n            switch (characterEaten) {\n                case 0:\n                    break loop;\n                case 96:\n                case 34:\n                    lexQuote_1.default(indent, characterEaten === 96);\n                    break;\n                case 40:\n                    if (sourceContext_1.tryEat(41))\n                        groupContext_1.addToCurrentGroup(new Group_1.GroupParenthesis(loc(), []));\n                    else\n                        groupContext_1.openParenthesis(loc());\n                    break;\n                case 91:\n                    if (sourceContext_1.tryEat(93))\n                        groupContext_1.addToCurrentGroup(new Group_1.GroupBracket(loc(), []));\n                    else {\n                        groupContext_1.openGroup(startPos(), Group_1.GroupBracket);\n                        groupContext_1.openGroup(sourceContext_1.pos(), Group_1.GroupSpace);\n                    }\n                    break;\n                case 41:\n                    if (groupContext_1.closeInterpolationOrParenthesis(loc())) {\n                        util_1.assert(isInQuote);\n                        break loop;\n                    }\n                    break;\n                case 93:\n                    groupContext_1.closeGroup(startPos(), Group_1.GroupSpace);\n                    groupContext_1.closeGroup(sourceContext_1.pos(), Group_1.GroupBracket);\n                    break;\n                case 32:\n                    groupContext_1.space(loc());\n                    break;\n                case 10: {\n                    context_1.check(!isInQuote, loc, _ => _.noNewlineInInterpolation);\n                    if (sourceContext_1.peek(-2) === 32)\n                        context_1.warn(sourceContext_1.pos(), _ => _.trailingSpace);\n                    sourceContext_1.skipNewlines();\n                    const oldIndent = indent;\n                    indent = eatIndent();\n                    if (indent > oldIndent) {\n                        context_1.check(indent === oldIndent + 1, loc, _ => _.tooMuchIndent);\n                        const l = loc();\n                        if (util_1.isEmpty(groupContext_1.curGroup.subTokens) ||\n                            !Keyword_1.isKeyword(125, util_1.last(groupContext_1.curGroup.subTokens))) {\n                            if (groupContext_1.curGroup instanceof Group_1.GroupSpace)\n                                groupContext_1.closeSpaceOKIfEmpty(l.start);\n                            groupContext_1.openGroup(l.end, Group_1.GroupSpace);\n                        }\n                        groupContext_1.openGroup(l.start, Group_1.GroupBlock);\n                        groupContext_1.openLine(l.end);\n                    }\n                    else {\n                        const l = loc();\n                        for (let i = indent; i < oldIndent; i = i + 1)\n                            groupContext_1.closeGroupsForDedent(l.start);\n                        groupContext_1.closeLine(l.start);\n                        groupContext_1.openLine(l.end);\n                    }\n                    break;\n                }\n                case 9:\n                    throw context_1.fail(loc(), _ => _.nonLeadingTab);\n                case 33:\n                    if (sourceContext_1.tryEat(124))\n                        funKeyword(108);\n                    else\n                        handleName();\n                    break;\n                case 36:\n                    if (sourceContext_1.tryEat2(33, 124))\n                        funKeyword(112);\n                    else if (sourceContext_1.tryEat(124))\n                        funKeyword(111);\n                    else\n                        handleName();\n                    break;\n                case 42:\n                    if (sourceContext_1.tryEat2(33, 124))\n                        funKeyword(116);\n                    else if (sourceContext_1.tryEat(124))\n                        funKeyword(115);\n                    else\n                        handleName();\n                    break;\n                case 124:\n                    if (sourceContext_1.tryEat(32) || sourceContext_1.tryEat(9)) {\n                        const text = sourceContext_1.eatRestOfLine();\n                        groupContext_1.closeSpaceOKIfEmpty(startPos());\n                        context_1.check(groupContext_1.curGroup instanceof Group_1.GroupLine && groupContext_1.curGroup.subTokens.length === 0, loc, _ => _.trailingDocComment);\n                        groupContext_1.addToCurrentGroup(new Token_1.DocComment(loc(), text));\n                    }\n                    else if (sourceContext_1.tryEat(124))\n                        sourceContext_1.skipRestOfLine();\n                    else\n                        funKeyword(107);\n                    break;\n                case 45:\n                    if (chars_1.isDigit(sourceContext_1.peek()))\n                        eatAndAddNumber();\n                    else\n                        handleName();\n                    break;\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    eatAndAddNumber();\n                    break;\n                case 46: {\n                    if (sourceContext_1.peek() === 32 || sourceContext_1.peek() === 10) {\n                        groupContext_1.closeSpaceOKIfEmpty(startPos());\n                        keyword(134);\n                    }\n                    else if (sourceContext_1.tryEat(124))\n                        funKeyword(109);\n                    else if (sourceContext_1.tryEat2(33, 124))\n                        funKeyword(110);\n                    else if (sourceContext_1.tryEat2(42, 124))\n                        funKeyword(117);\n                    else if (sourceContext_1.tryEat3(42, 33, 124))\n                        funKeyword(118);\n                    else if (sourceContext_1.tryEat(46))\n                        if (sourceContext_1.tryEat(46))\n                            keyword(96);\n                        else\n                            keyword(95);\n                    else\n                        keyword(94);\n                    break;\n                }\n                case 58:\n                    if (sourceContext_1.tryEat(61))\n                        keyword(126);\n                    else\n                        keyword(89);\n                    break;\n                case 39:\n                    keyword(145);\n                    break;\n                case 126:\n                    keyword(125);\n                    break;\n                case 38:\n                    keyword(77);\n                    break;\n                case 92:\n                case 94:\n                case 125:\n                case 44:\n                case 35:\n                case 123:\n                case 37:\n                case 59:\n                    throw context_1.fail(loc(), _ => _.reservedChar(characterEaten));\n                default:\n                    handleName();\n            }\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = lexPlain;\n});\n"],"sourceRoot":"/source/"}